<?php
namespace cloudwise\tsb\datasource\constants;

/**
 * Created by PhpStorm.
 * User: bear
 * Date: 15-8-24
 * Time: 下午7:06.
 */
class SmartAgentFunctionTypeEnum
{
    //数据库类型--名称
    const DB_MYSQL = 'Mysql';
    const DB_SQLSERVER = 'SQLServer';
    const DB_ORACLE = 'Oracle';
    const DB_REDIS = 'Redis';
    const DB_POSTGRESQL = 'Postgresql';
    const DB_MEMCACHE = 'Memcache';
    const DB_MONGODB = 'Mongodb';
    const DB_DB2 = 'DB2';
    const DB_ACCESS = 'Access';
    const DB_SQLLITE = 'SQLLite';
    const DB_SYBASE = 'Sybase';

    //IO & CURL & SOAP
    const IO_OPEN = 1001;
    const CURL = 1101;
    const SOAP = 1201;
    const RABBIT_PRODUCER = 1301;
    const RABBIT_CONSUMER = 1302;
    //Relational database
    const MYSQL_CONNECT_OPEN = 2001;
    const MYSQL_CONNECT_CLOSE = 2002;
    const MYSQL_QUERY = 2003;
    const MYSQL_OPT_INSERT = 200301;
    const MYSQL_OPT_DELETE = 200302;
    const MYSQL_OPT_UPDATE = 200303;
    const MYSQL_OPT_SELECT = 200304;

    const SQLSERVER_CONNECT_OPEN = 2011;
    const SQLSERVER_CONNECT_CLOSE = 2012;
    const SQLSERVER_QUERY = 2013;
    const SQLSERVER_OPT_INSERT = 201301;
    const SQLSERVER_OPT_DELETE = 201302;
    const SQLSERVER_OPT_UPDATE = 201303;
    const SQLSERVER_OPT_SELECT = 201304;

    const ORACLE_CONNECT_OPEN = 2021;
    const ORACLE_CONNECT_CLOSE = 2022;
    const ORACLE_QUERY = 2023;
    const ORACLE_OPT_INSERT = 202301;
    const ORACLE_OPT_DELETE = 202302;
    const ORACLE_OPT_UPDATE = 202303;
    const ORACLE_OPT_SELECT = 202304;

    const POSTGRESQL_CONNECT_OPEN = 2031;
    const POSTGRESQL_CONNECT_CLOSE = 2032;
    const POSTGRESQL_QUERY = 2033;
    const POSTGRESQL_OPT_INSERT = 203301;
    const POSTGRESQL_OPT_DELETE = 203302;
    const POSTGRESQL_OPT_UPDATE = 203303;
    const POSTGRESQL_OPT_SELECT = 203304;

    const SYBASE_CONNECT_OPEN = 2041;
    const SYBASE_CONNECT_CLOSE = 2042;
    const SYBASE_QUERY = 2043;
    const SYBASE_OPT_INSERT = 204301;
    const SYBASE_OPT_DELETE = 204302;
    const SYBASE_OPT_UPDATE = 204303;
    const SYBASE_OPT_SELECT = 204304;

    const DB2_CONNECT_OPEN = 2051;
    const DB2_CONNECT_CLOSE = 2052;
    const DB2_QUERY = 2053;
    const DB2_OPT_INSERT = 205301;
    const DB2_OPT_ELETE = 205302;
    const DB2_OPT_PDATE = 205303;
    const DB2_OPT_ELECT = 205304;

    const ACCESS_CONNECT_OPEN = 2061;
    const ACCESS_CONNECT_CLOSE = 2062;
    const ACCESS_QUERY = 2063;

    const SQLLITE_CONNECT_OPEN = 2071;
    const SQLLITE_CONNECT_CLOSE = 2072;
    const SQLLITE_QUERY = 2073;

    const UNKNOWN_MONGODB = 10001;
    const UNKNOWN_REDIS = 10002;
    const UNKNOWN_MEMCACHE = 10003;
    // Non-relational database
    const MEMCACHE_CONNECT_OPEN = 2101;
    const MEMCACHE_CONNECT_CLOSE = 2102;
    const MEMCACHE_SET = 2103;
    const MEMCACHE_GET = 2104;
    const MEMCACHE_DELETE = 2105;

    const GET_ONE_MEMCACHE = 2106;
    const GET_MANY_MEMCACHE = 2107;
    const SET_MEMCACHE = 2108;
    const REPLACE_MEMCACHE = 2109;
    const ADD_MEMCACHE = 21010;
    const EXCEPTION_MEMCACHE = 21011;
    const DELETE_MEMCACHE = 21012;
    const VERSION_MEMCACHE = 21013;
    const QUIT_MEMCACHE = 21014;
    const INCR_MEMCACHE = 21015;
    const DECR_MEMCACHE = 21016;
    const GETS_ONE_MEMCACHE = 21017;
    const GETS_MANY_MEMCACHE = 21018;
    const CAS_MEMCACHE = 21019;
    const PREPEND_MEMCACHE = 21021;
    const GET_HIT_MEMCACHE = 21022;
    const GET_MISS_MEMCACHE = 21023;
    const VERBOSITY_MEMCACHE = 21024;
    const AUTH_LIST_MEMCACHE = 21025;
    const AUTH_START_MEMCACHE = 21026;
    const AUTH_STEP_MEMCACHE = 21027;
    const APPEND_MEMCACHE = 21028;
    const TOUCH_MEMCACHE = 21029;
    const GAT_MEMCACHE = 21030;
    const GATQ_MEMCACHE = 21031;
    const SET_MANY_MEMCACHE = 21032;
    const NOOP_MEMCACHE = 21033;
    const STATS_MEMCACHE = 21034;
    const FLUSH_ALL_MEMCACHE = 21035;

    //新增MEMCACHE
    const PHP_MEMCACHED_ADD = 21100;//add
    const PHP_MEMCACHED_ADD_BY_KEY = 21101;//addByKey
    const PHP_MEMCACHED_ADD_SERVER = 21102;//addServer
    const PHP_MEMCACHED_ADD_SERVERS = 21103;//addServers
    const PHP_MEMCACHED_APPEND = 21104;//append
    const PHP_MEMCACHED_APPEND_BY_KEY = 21105;//appendByKey
    const PHP_MEMCACHED_CAS = 21106;//cas
    const PHP_MEMCACHED_CAS_BYK_EY = 21107;//casByKey
    const PHP_MEMCACHED_CONSTRUCT = 21108;//construct
    const PHP_MEMCACHED_DECREMENT = 21109;//decrement
    const PHP_MEMCACHED_DECREMENT_BY_KEY = 21110;//decrementByKey
    const PHP_MEMCACHED_DELETE = 21111;//delete
    const PHP_MEMCACHED_DELETE_BY_KEY = 21112;//deleteByKey
    const PHP_MEMCACHED_DELETE_MULTI = 21113;//deleteMulti
    const PHP_MEMCACHED_DELETE_MULTI_BY_KEY = 21114;//deleteMultiByKey
    const PHP_MEMCACHED_FETCH = 21115;//fetch
    const PHP_MEMCACHED_FETCH_ALL = 21116;//fetchAll
    const PHP_MEMCACHED_FLUSH = 21117;//flush
    const PHP_MEMCACHED_GET = 21118;//get
    const PHP_MEMCACHED_GET_ALL_KEYS = 21119;//getAllKeys
    const PHP_MEMCACHED_GET_BY_KEY = 21120;//getByKey
    const PHP_MEMCACHED_GET_DELAYED = 21121;//getDelayed
    const PHP_MEMCACHED_GET_DELAYED_BY_KEY = 21122;//getDelayedByKey
    const PHP_MEMCACHED_GET_MULTI = 21123;//getMulti
    const PHP_MEMCACHED_GET_MULTI_BY_KEY = 21124;//getMultiByKey
    const PHP_MEMCACHED_GET_OPTION = 21125;//getOption
    const PHP_MEMCACHED_GET_RESULT_CODE = 21126;//getResultCode
    const PHP_MEMCACHED_GET_RESULT_MESSAGE = 21127;//getResultMessage
    const PHP_MEMCACHED_GET_SERVER_BY_KEY = 21128;//getServerByKey
    const PHP_MEMCACHED_GET_SERVER_LIST = 21129;//getServerList
    const PHP_MEMCACHED_GET_STATS = 21130;//getStats
    const PHP_MEMCACHED_GET_VERSION = 21131;//getVersion
    const PHP_MEMCACHED_INCREMENT = 21132;//increment
    const PHP_MEMCACHED_INCREMENT_BY_KEY = 21133;//incrementByKey
    const PHP_MEMCACHED_IS_PERSISTENT = 21134;//isPersistent
    const PHP_MEMCACHED_IS_PRISTINE = 21135;//isPristine
    const PHP_MEMCACHED_PREPEND = 21136;//prepend
    const PHP_MEMCACHED_PREPEND_BY_KEY = 21137;//prependByKey
    const PHP_MEMCACHED_QUIT = 21138;//quit
    const PHP_MEMCACHED_REPLACE = 21139;//replace
    const PHP_MEMCACHED_REPLACE_BY_KEY = 21140;//replaceByKey
    const PHP_MEMCACHED_RESET_SERVER_LIST = 21141;//resetServerList
    const PHP_MEMCACHED_SET = 21142;//set
    const PHP_MEMCACHED_SET_BY_KEY = 21143;//setByKey
    const PHP_MEMCACHED_SET_MULTI = 21144;//setMulti
    const PHP_MEMCACHED_SET_MULTI_BY_KEY = 21145;//setMultiByKey
    const PHP_MEMCACHED_SET_OPTION = 21146;//setOption
    const PHP_MEMCACHED_SET_OPTIONS = 21147;//setOptions
    const PHP_MEMCACHED_SET_SASL_AUTH_DATA = 21148;//setSaslAuthData
    const PHP_MEMCACHED_TOUCH = 21149;//touch
    const PHP_MEMCACHED_TOUCH_BY_KEY = 21150;//touchByKey
    const PHP_MEMCACHED_EXCEPTION = 21151;//Exception

    const PHP_MEMCACHE_ADD = 21200;//add
    const PHP_MEMCACHE_ADD_SERVER = 21201;//addServer
    const PHP_MEMCACHE_CLOSE = 21202;//close
    const PHP_MEMCACHE_CONNECT = 21203;//connect
    const PHP_MEMCACHE_DECREMENT = 21204;//decrement
    const PHP_MEMCACHE_DELETE = 21205;//delete
    const PHP_MEMCACHE_FLUSH = 21206;//flush
    const PHP_MEMCACHE_GET = 21207;//get
    const PHP_MEMCACHE_GET_EXTENDED_STATS = 21208;//getExtendedStats
    const PHP_MEMCACHE_GET_SERVER_STATUS = 21209;//getServerStatus
    const PHP_MEMCACHE_GET_STATS = 21210;//getStats
    const PHP_MEMCACHE_GET_VERSION = 21211;//getVersion
    const PHP_MEMCACHE_INCREMENT = 21212;//increment
    const PHP_MEMCACHE_PCONNECT = 21213;//pconnect
    const PHP_MEMCACHE_REPLACE = 21214;//replace
    const PHP_MEMCACHE_SET = 21215;//set
    const PHP_MEMCACHE_SET_COMPRESS_THRESHOLD = 21216;//setCompressThreshold
    const PHP_MEMCACHE_SET_SERVER_PARAMS = 21217;//setServerParams

    const JAVA_MEMCACHE_GET_TOUCH = 21036;//GET_TOUCH
    const JAVA_MEMCACHE_GETL = 21037;//GETL
    const JAVA_MEMCACHE_REPLACE_GET = 21038;//REPLACE_GET
    const JAVA_MEMCACHE_MULTI_GET = 21039;//MULTI_GET
    const JAVA_MEMCACHE_ASYNC_CAS = 21040;//ASYNC_CAS
    const JAVA_MEMCACHE_ASYNC_GET = 21041;//ASYNC_GET
    const JAVA_MEMCACHE_GET_AND_TOUCH = 21042;//GET_AND_TOUCH
    const JAVA_MEMCACHE_ASYNC_GET_BULK = 21043;//ASYNC_GET_BULK
    const JAVA_MEMCACHE_ASYNC_GET_AND_TOUCH = 21044;//ASYNC_GET_AND_TOUCH
    const JAVA_MEMCACHE_GET_BULK = 21045;//GET_BULK
    const JAVA_MEMCACHE_ASYNC_INCR = 21046;//ASYNC_INCR
    const JAVA_MEMCACHE_ASYNC_DECR = 21047;//ASYNC_DECR
    const JAVA_MEMCACHE_ADD_OR_INCR = 21048;//ADD_OR_INCR
    const JAVA_MEMCACHE_ADD_OR_DECR = 21049;//ADD_OR_DECR

    const DOTNET_MEMCACHE_STORECOUNTER = 21050;//StoreCounter
    const DOTNET_MEMCACHE_INCREMENT = 21051;//Increment
    const DOTNET_MEMCACHE_DECREMENT = 21052;//Decrement
    const DOTNET_MEMCACHE_GETCOUNTER = 21053;//GetCounter
    const DOTNET_MEMCACHE_KEYEXISTS = 21054;//KeyExists
    const DOTNET_MEMCACHE_GETEXPIRATIONTIME = 21055;//GetExpirationTime
    const DOTNET_MEMCACHE_INCREMENTORDECREMENT = 21056;//IncrementOrDecrement
    const DOTNET_MEMCACHE_GETMULTIPLEARRAY = 21057;//GetMultipleArray
    const DOTNET_MEMCACHE_GETMULTIPLE = 21058;//GetMultiple
    const DOTNET_MEMCACHE_LOADITEMS = 21059;//LoadItems
    const DOTNET_MEMCACHE_GET = 21060;//GET
    const DOTNET_MEMCACHE_GETS = 21061;//GETS

    const REDIS_CONNECT_OPEN = 2201;
    const REDIS_CONNECT_CLOSE = 2202;
    const REDIS_SET = 2203;
    const REDIS_GET = 2204;
    const REDIS_DELETE = 2205;


    const CLUSTER_REDIS = 22030101;
    const SET_REDIS = 2203;
    const GET_REDIS = 2204;
    const DEL_REDIS = 2205;
    const DELETE_REDIS = 2205;
    const DROP_REDIS = 2206;
    const QUIT_REDIS = 2207;
    const APPEND_REDIS = 22030207;
    const BITCOUNT_REDIS = 22080201;
    const BITOP_REDIS = 22080202;
    const DECR_REDIS = 22060201;
    const DECRBY_REDIS = 22060202;
    const GETBIT_REDIS = 22040201;
    const GETRANGE_REDIS = 22040202;
    const GETSET_REDIS = 22040203;
    const INCR_REDIS = 22060203;
    const INCRBY_REDIS = 22060204;
    const INCRBYFLOAT_REDIS = 22060205;
    const MGET_REDIS = 220402;
    const MSET_REDIS = 220302;
    const MSETNX_REDIS = 22030201;
    const PSETEX_REDIS = 22030202;
    const SETBIT_REDIS = 22030203;
    const SETEX_REDIS = 22030204;
    const SETNX_REDIS = 22030205;
    const SETRANGE_REDIS = 22030206;
    const STRLEN_REDIS = 22040210;
    const HDEL_REDIS = 220503;
    const HEXISTS_REDIS = 220803;
    const HGET_REDIS = 220403;
    const HGETALL_REDIS = 22040302;
    const HINCRBY_REDIS = 22060301;
    const HINCRBYFLOAT_REDIS = 22060302;
    const HKEYS_REDIS = 22060303;
    const HLEN_REDIS = 22060304;
    const HMGET_REDIS = 22040303;
    const HMSET_REDIS = 22030303;
    const HSET_REDIS = 22030302;
    const HSETNX_REDIS = 22030304;
    const HVALS_REDIS = 22060305;
    const HSCAN_REDIS = 22060306;
    const BLPOP_REDIS = 22080401;
    const BRPOP_REDIS = 22080402;
    const BRPOPLPUSH = 22080403;
    const LINDEX_REDIS = 22080404;
    const LINSERT_REDIS = 22030401;
    const LLEN_REDIS = 22080405;
    const LPOP_REDIS = 22080406;
    const LPUSH_REDIS = 22080407;
    const LPUSHX_REDIS = 22080408;
    const LRANGE_REDIS = 22080409;
    const LREM_REDIS = 22080410;
    const LSET_REDIS = 22030402;
    const LTRIM_REDIS = 22080411;
    const RPOP_REDIS = 22080412;
    const RPOPLPUSH_REDIS = 22080413;
    const RPUSH_REDIS = 22080414;
    const RPUSHX_REDIS = 22080415;
    const SADD_REDIS = 22080501;
    const SCARD_REDIS = 22080502;
    const SDIFF_REDIS = 22080503;
    const SDIFFSTORE_REDIS = 22080504;
    const SINTER_REDIS = 22080505;
    const SINTERSTORE_REDIS = 22080506;
    const SISMEMBER_REDIS = 22080507;
    const SMEMBERS_REDIS = 22080508;
    const SMOVE_REDIS = 22080509;
    const SPOP_REDIS = 22080510;
    const SRANDMEMBER_REDIS = 22080511;
    const SREM_REDIS = 22080512;
    const SUNION_REDIS = 22080513;
    const SUNIONSTORE_REDIS = 22080514;
    const SSCAN_REDIS = 22080515;
    const ZADD_REDIS = 22080601;
    const ZCARD_REDIS = 22080602;
    const ZCOUNT_REDIS = 22080603;
    const ZINCRBY_REDIS = 22080604;
    const ZRANGE_REDIS = 22080605;
    const ZRANGEBYSCORE_REDIS = 22080606;
    const ZRANK_REDIS = 22080607;
    const ZREM_REDIS = 22080608;
    const ZREMRANGEBYRANK_REDIS = 22080609;
    const ZREMRANGEBYSCORE_REDIS = 22080610;
    const ZREVRANGE_REDIS = 22080611;
    const ZREVRANGEBYSCORE_REDIS = 22080612;
    const ZREVRANK_REDIS = 22080613;
    const ZSCORE_REDIS = 22080614;
    const ZUNIONSTORE_REDIS = 22080615;
    const ZINTERSTORE_REDIS = 22080616;
    const ZSCAN_REDIS = 22080617;
    const PSUBSCRIBE_REDIS = 22080701;
    const PUBLISH_REDIS = 22080702;
    const PUBSUB_REDIS = 22080703;
    const PUNSUBSCRIBE_REDIS = 22080704;
    const SUBSCRIBE_REDIS = 22080705;
    const UNSUBSCRIBE_REDIS = 22080706;
    const DISCARD_REDIS = 22080707;
    const EXEC_REDIS = 22080708;
    const MULTI_REDIS = 22080709;
    const UNWATCH_REDIS = 22080710;
    const WATCH_REDIS = 22080711;
    const EVAL_REDIS = 22080712;
    const EVALSHA_REDIS = 22080713;
    const DUMP_REDIS = 22080801;
    const EXPIRE_REDIS = 22080802;
    const EXPIREAT_REDIS = 22080803;
    const KEYS_REDIS = 22060801;
    const MIGRATE_REDIS = 22080804;
    const MOVE_REDIS = 22080805;
    const OBJECT_REDIS = 22080806;
    const PERSIST_REDIS = 22080807;
    const PEXPIREAT_REDIS = 22080808;
    const PTTL_REDIS = 22080809;
    const RANDOMKEY_REDIS = 22080810;
    const RENAME_REDIS = 22080811;
    const RENAMENX_REDIS = 22080812;
    const RESTORE_REDIS = 22080813;
    const SORT_REDIS = 22080814;
    const TTL_REDIS = 22080815;
    const TYPE_REDIS = 22080816;
    const EXISTS_REDIS = 2208;
    const CLIENT_SETNAME_REDIS = 22090601;//REDIS新增命令
    const TIME_REDIS = 22090602;
    const SYNC_REDIS = 22090603;
    const PEXPIRE_REDIS = 22090604;
    const SCAN_REDIS = 22090605;
    const SLOWLOG_REDIS = 22090606;
    const SCRIPT_EXISTS_REDIS = 22090607;
    const SCRIPT_FLUSH_REDIS = 22090608;
    const SCRIPT_KILL_REDIS = 22090609;
    const SCRIPT_LOAD_REDIS = 22090610;
    const AUTH_REDIS = 22090611;
    const ECHO_REDIS = 22090612;
    const PING_REDIS = 22090613;
    const SELECT_REDIS = 22090614;
    const BGREWRITEAOF_REDIS = 22090615;
    const BGSAVE_REDIS = 22090616;
    const CLIENT_GETNAME_REDIS = 22090617;
    const CLIENT_KILL_REDIS = 22090618;
    const CLIENT_LIST_REDIS = 22090619;
    const CONFIG_GET_REDIS = 22090620;
    const CONFIG_RESETSTAT_REDIS = 22090621;
    const CONFIG_REWRITE_REDIS = 22090622;
    const CONFIG_SET_REDIS = 22090623;
    const DBSIZE_REDIS = 22090624;
    const DEBUG_OBJECT_REDIS = 22090625;
    const DEBUG_SEGFAULT_REDIS = 22090626;
    const FLUSHALL_REDIS = 22090627;
    const FLUSHDB_REDIS = 22090628;
    const INFO_REDIS = 22090629;
    const LASTSAVE_REDIS = 22090630;
    const MONITOR_REDIS = 22090631;
    const PSYNC_REDIS = 22090632;
    const SAVE_REDIS = 22090633;
    const SHUTDOWN_REDIS = 22090634;
    const SLAVEOF_REDIS = 22090635;

    /**
     * php 支持 redis pst Type
     */
    const PHP_REDIS_DEL = 22110001;
    const PHP_REDIS_DUMP = 22110002;
    const PHP_REDIS_EXISTS = 22110003;
    const PHP_REDIS_EXPIRE = 22110004;
    const PHP_REDIS_EXPIREAT = 22110005;
    const PHP_REDIS_KEYS = 22110006;
    const PHP_REDIS_MOVE = 22110007;
    const PHP_REDIS_OBJECT = 22110008;
    const PHP_REDIS_PERSIST = 22110009;
    const PHP_REDIS_PEXPIRE = 22110010;
    const PHP_REDIS_PEXPIREAT = 22110011;
    const PHP_REDIS_PTTL = 22110012;
    const PHP_REDIS_RANDOMKEY = 22110013;
    const PHP_REDIS_RENAME = 22110014;
    const PHP_REDIS_RENAMENX = 22110015;
    const PHP_REDIS_SCAN = 22110016;
    const PHP_REDIS_SORT = 22110017;
    const PHP_REDIS_TTL = 22110018;
    const PHP_REDIS_TYPE = 22110019;
    const PHP_REDIS_APPEND = 22110020;
    const PHP_REDIS_BITCOUNT = 22110021;
    const PHP_REDIS_BITOP = 22110022;
    const PHP_REDIS_BITFIELD = 22110023;
    const PHP_REDIS_DECR = 22110024;
    const PHP_REDIS_DECRBY = 22110025;
    const PHP_REDIS_GET = 22110026;
    const PHP_REDIS_GETBIT = 22110027;
    const PHP_REDIS_GETRANGE = 22110028;
    const PHP_REDIS_GETSET = 22110029;
    const PHP_REDIS_INCR = 22110030;
    const PHP_REDIS_INCRBY = 22110031;
    const PHP_REDIS_INCRBYFLOAT = 22110032;
    const PHP_REDIS_MGET = 22110033;
    const PHP_REDIS_MSET = 22110034;
    const PHP_REDIS_MSETNX = 22110035;
    const PHP_REDIS_PSETEX = 22110036;
    const PHP_REDIS_SET = 22110037;
    const PHP_REDIS_SETBIT = 22110038;
    const PHP_REDIS_SETEX = 22110039;
    const PHP_REDIS_SETNX = 22110040;
    const PHP_REDIS_SETRANGE = 22110041;
    const PHP_REDIS_STRLEN = 22110042;
    const PHP_REDIS_HDEL = 22110043;
    const PHP_REDIS_HEXISTS = 22110044;
    const PHP_REDIS_HGET = 22110045;
    const PHP_REDIS_HGETALL = 22110046;
    const PHP_REDIS_HINCRBY = 22110047;
    const PHP_REDIS_HINCRBYFLOAT = 22110048;
    const PHP_REDIS_HKEYS = 22110049;
    const PHP_REDIS_HLEN = 22110050;
    const PHP_REDIS_HMGET = 22110051;
    const PHP_REDIS_HMSET = 22110052;
    const PHP_REDIS_HSCAN = 22110053;
    const PHP_REDIS_HSET = 22110054;
    const PHP_REDIS_HSETNX = 22110055;
    const PHP_REDIS_HVALS = 22110056;
    const PHP_REDIS_HSTRLEN = 22110057;
    const PHP_REDIS_BLPOP = 22110058;
    const PHP_REDIS_BRPOP = 22110059;
    const PHP_REDIS_BRPOPLPUSH = 22110060;
    const PHP_REDIS_LINDEX = 22110061;
    const PHP_REDIS_LINSERT = 22110062;
    const PHP_REDIS_LLEN = 22110063;
    const PHP_REDIS_LPOP = 22110064;
    const PHP_REDIS_LPUSH = 22110065;
    const PHP_REDIS_LPUSHX = 22110066;
    const PHP_REDIS_LRANGE = 22110067;
    const PHP_REDIS_LREM = 22110068;
    const PHP_REDIS_LSET = 22110069;
    const PHP_REDIS_LTRIM = 22110070;
    const PHP_REDIS_RPOP = 22110071;
    const PHP_REDIS_RPOPLPUSH = 22110072;
    const PHP_REDIS_RPUSH = 22110073;
    const PHP_REDIS_RPUSHX = 22110074;
    const PHP_REDIS_SADD = 22110075;
    const PHP_REDIS_SCARD = 22110076;
    const PHP_REDIS_SDIFF = 22110077;
    const PHP_REDIS_SDIFFSTORE = 22110078;
    const PHP_REDIS_SINTER = 22110079;
    const PHP_REDIS_SINTERSTORE = 22110080;
    const PHP_REDIS_SISMEMBER = 22110081;
    const PHP_REDIS_SMEMBERS = 22110082;
    const PHP_REDIS_SMOVE = 22110083;
    const PHP_REDIS_SPOP = 22110084;
    const PHP_REDIS_SRANDMEMBER = 22110085;
    const PHP_REDIS_SREM = 22110086;
    const PHP_REDIS_SSCAN = 22110087;
    const PHP_REDIS_SUNION = 22110088;
    const PHP_REDIS_SUNIONSTORE = 22110089;
    const PHP_REDIS_ZADD = 22110090;
    const PHP_REDIS_ZCARD = 22110091;
    const PHP_REDIS_ZCOUNT = 22110092;
    const PHP_REDIS_ZINCRBY = 22110093;
    const PHP_REDIS_ZINTERSTORE = 22110094;
    const PHP_REDIS_ZRANGE = 22110095;
    const PHP_REDIS_ZRANGEBYSCORE = 22110096;
    const PHP_REDIS_ZRANK = 22110097;
    const PHP_REDIS_ZREM = 22110098;
    const PHP_REDIS_ZREMRANGEBYRANK = 22110099;
    const PHP_REDIS_ZREMRANGEBYSCORE = 22110100;
    const PHP_REDIS_ZREVRANGE = 22110101;
    const PHP_REDIS_ZREVRANGEBYSCORE = 22110102;
    const PHP_REDIS_ZREVRANK = 22110103;
    const PHP_REDIS_ZUNIONSTORE = 22110104;
    const PHP_REDIS_ZSCORE = 22110105;
    const PHP_REDIS_ZSCAN = 22110106;
    const PHP_REDIS_ZRANGEBYLEX = 22110107;
    const PHP_REDIS_ZREVRANGEBYLEX = 22110108;
    const PHP_REDIS_ZREMRANGEBYLEX = 22110109;
    const PHP_REDIS_ZLEXCOUNT = 22110110;
    const PHP_REDIS_PFADD = 22110111;
    const PHP_REDIS_PFMERGE = 22110112;
    const PHP_REDIS_PFCOUNT = 22110113;
    const PHP_REDIS_PUBSUB = 22110114;
    const PHP_REDIS_PUBLISH = 22110115;
    const PHP_REDIS_DISCARD = 22110116;
    const PHP_REDIS_EXEC = 22110117;
    const PHP_REDIS_MULTI = 22110118;
    const PHP_REDIS_UNWATCH = 22110119;
    const PHP_REDIS_WATCH = 22110120;
    const PHP_REDIS_EVAL = 22110121;
    const PHP_REDIS_EVALSHA = 22110122;
    const PHP_REDIS_SCRIPT = 22110123;
    const PHP_REDIS_AUTH = 22110124;
    const PHP_REDIS_ECHO = 22110125;
    const PHP_REDIS_PING = 22110126;
    const PHP_REDIS_SELECT = 22110127;
    const PHP_REDIS_BGREWRITEAOF = 22110128;
    const PHP_REDIS_BGSAVE = 22110129;
    const PHP_REDIS_CLIENT = 22110130;
    const PHP_REDIS_CONFIG = 22110131;
    const PHP_REDIS_DBSIZE = 22110132;
    const PHP_REDIS_FLUSHALL = 22110133;
    const PHP_REDIS_FLUSHDB = 22110134;
    const PHP_REDIS_INFO = 22110135;
    const PHP_REDIS_LASTSAVE = 22110136;
    const PHP_REDIS_SAVE = 22110137;
    const PHP_REDIS_SLAVEOF = 22110138;
    const PHP_REDIS_SLOWLOG = 22110139;
    const PHP_REDIS_TIME = 22110140;
    const PHP_REDIS_COMMAND = 22110141;
    const PHP_REDIS_GEOADD = 22110142;
    const PHP_REDIS_GEOHASH = 22110143;
    const PHP_REDIS_GEOPOS = 22110144;
    const PHP_REDIS_GEODIST = 22110145;
    const PHP_REDIS_GEORADIUS = 22110146;
    const PHP_REDIS_GEORADIUSBYMEMBER = 22110147;


    const DOTNET_REDIS_NEW = 22100001;
    const DOTNET_REDIS_CUSTOM = 22100002;
    const DOTNET_REDIS_CONVERT_TO_SERVER_DATE = 22100003;
    const DOTNET_REDIS_GET_TYPE_SEQUENCE_KEY = 22100004;
    const DOTNET_REDIS_GET_TYPE_IDS_SET_KEY = 22100005;
    const DOTNET_REDIS_GET_ALL_KEYS = 22100006;
    const DOTNET_REDIS_SET_ENTRY = 22100007;
    const DOTNET_REDIS_SET_VALUE = 22100008;
    const DOTNET_REDIS_SET_ENTRY_IF_EXISTS = 22100009;
    const DOTNET_REDIS_SET_VALUE_IF_EXISTS = 22100010;
    const DOTNET_REDIS_SET_ENTRY_IF_NOT_EXISTS = 22100011;
    const DOTNET_REDIS_SET_VALUE_IF_NOT_EXISTS = 22100012;
    const DOTNET_REDIS_CHANGE_DB = 22100013;
    const DOTNET_REDIS_GET_CLIENT_LIST = 22100014;
    const DOTNET_REDIS_SET_VALUES = 22100015;
    const DOTNET_REDIS_SET_ALL = 22100016;
    const DOTNET_REDIS_GET_ENTRY = 22100017;
    const DOTNET_REDIS_GET_VALUE = 22100018;
    const DOTNET_REDIS_GET_AND_SET_ENTRY = 22100019;
    const DOTNET_REDIS_GET_AND_SET_VALUE = 22100020;
    const DOTNET_REDIS_CONTAINS_KEY = 22100021;
    const DOTNET_REDIS_REMOVE_ENTRY = 22100022;
    const DOTNET_REDIS_REMOVE = 22100023;
    const DOTNET_REDIS_INCREMENT_VALUE = 22100024;
    const DOTNET_REDIS_INCREMENT_VALUE_BY = 22100025;
    const DOTNET_REDIS_DECREMENT_VALUE = 22100026;
    const DOTNET_REDIS_DECREMENT_VALUE_BY = 22100027;
    const DOTNET_REDIS_APPEND_TO_VALUE = 22100028;
    const DOTNET_REDIS_RENAME_KEY = 22100029;
    const DOTNET_REDIS_GET_STRING_COUNT = 22100030;
    const DOTNET_REDIS_GET_RANDOM_KEY = 22100031;
    const DOTNET_REDIS_EXPIRE_ENTRY_IN = 22100032;
    const DOTNET_REDIS_EXPIRE_ENTRY_AT = 22100033;
    const DOTNET_REDIS_GET_TIME_TO_LIVE = 22100034;
    const DOTNET_REDIS_ACQUIRE_LOCK = 22100035;
    const DOTNET_REDIS_CREATE_TRANSACTION = 22100036;
    const DOTNET_REDIS_ASSERT_NOT_IN_TRANSACTION = 22100037;
    const DOTNET_REDIS_CREATE_PIPELINE = 22100038;
    const DOTNET_REDIS_SEARCH_KEYS = 22100039;
    const DOTNET_REDIS_GET_VALUES = 22100040;
    const DOTNET_REDIS_GET_VALUES_MAP = 22100041;
    const DOTNET_REDIS_CREATE_SUBSCRIPTION = 22100042;
    const DOTNET_REDIS_PUBLISH_MESSAGE = 22100043;
    const DOTNET_REDIS_GET_REGISTERED_TYPE_IDS_WITHIN_PIPELINE = 22100044;
    const DOTNET_REDIS_REGISTER_TYPE_ID = 22100045;
    const DOTNET_REDIS_REGISTER_TYPE_IDS = 22100046;
    const DOTNET_REDIS_REMOVE_TYPE_IDS = 22100047;
    const DOTNET_REDIS_ADD_TYPE_IDS_REGISTERED_DURING_PIPELINE = 22100048;
    const DOTNET_REDIS_GET_BY_ID = 22100049;
    const DOTNET_REDIS_CLEAR_TYPE_IDS_REGISTERED_DURING_PIPELINE = 22100050;
    const DOTNET_REDIS_GET_BY_IDS = 22100051;
    const DOTNET_REDIS_GET_ALL = 22100052;
    const DOTNET_REDIS_STORE_OBJECT = 22100053;
    const DOTNET_REDIS_STORE_ALL = 22100054;
    const DOTNET_REDIS_GET_FROM_HASH = 22100055;
    const DOTNET_REDIS_STORE_AS_HASH = 22100056;
    const DOTNET_REDIS__STORE_ALL = 22100057;
    const DOTNET_REDIS_WRITE_ALL = 22100058;
    const DOTNET_REDIS_SERIALIZE_TO_UTF8_BYTES = 22100059;
    const DOTNET_REDIS_DELETE = 22100060;
    const DOTNET_REDIS_DELETE_BY_ID = 22100061;
    const DOTNET_REDIS_DELETE_BY_IDS = 22100062;
    const DOTNET_REDIS_DELETE_ALL = 22100063;
    const DOTNET_REDIS_CLONE_CLIENT = 22100064;
    const DOTNET_REDIS_URN_KEY = 22100065;
    const DOTNET_REDIS_EXEC_CACHED_LUA = 22100066;
    const DOTNET_REDIS_EXEC_LUA = 22100067;
    const DOTNET_REDIS_EXEC_LUA_AS_INT = 22100068;
    const DOTNET_REDIS_EXEC_LUA_SHA_AS_INT = 22100069;
    const DOTNET_REDIS_EXEC_LUA_AS_STRING = 22100070;
    const DOTNET_REDIS_EXEC_LUA_SHA_AS_STRING = 22100071;
    const DOTNET_REDIS_EXEC_LUA_AS_LIST = 22100072;
    const DOTNET_REDIS_HAS_LUA_SCRIPT = 22100073;
    const DOTNET_REDIS_WHICH_LUA_SCRIPTS_EXISTS = 22100074;
    const DOTNET_REDIS_REMOVE_ALL_LUA_SCRIPTS = 22100075;
    const DOTNET_REDIS_KILL_RUNNING_LUA_SCRIPT = 22100076;
    const DOTNET_REDIS_LOAD_LUA_SCRIPT = 22100077;
    const DOTNET_REDIS_REMOVE_BY_PATTERN = 22100078;
    const DOTNET_REDIS_REMOVE_BY_REGEX = 22100079;
    const DOTNET_REDIS_SCAN_ALL_KEYS = 22100080;
    const DOTNET_REDIS_SCAN_ALL_SET_ITEMS = 22100081;
    const DOTNET_REDIS_SCAN_ALL_SORTED_SETITEMS = 22100082;
    const DOTNET_REDIS_SCAN_ALL_HASH_ENTRIES = 22100083;
    const DOTNET_REDIS_ADD_TO_HYPER_LOG = 22100084;
    const DOTNET_REDIS_COUNT_HYPER_LOG = 22100085;
    const DOTNET_REDIS_MERGE_HYPER_LOGS = 22100086;
    const DOTNET_REDIS_GET_SERVER_ROLE = 22100087;
    const DOTNET_REDIS_TO_SERVER_ROLE = 22100088;
    const DOTNET_REMOVEALL = 22100089;
    const DOTNET_INCREMENT = 22100090;
    const DOTNET_DECREMENT = 22100091;
    const DOTNET_ADD = 22100092;
    const DOTNET_REPLACE = 22100093;
    const DOTNET_GET = 2204;
    const DOTNET_SET = 2203;
    const DOTNET_DISPOSECONNECTION = 2202;
    const DOTNET_CONNECT = 2201;

    const TOKYO_TYRANT_CONNECT_OPEN = 2211;
    const TOKYO_TYRANT_CONNECT_CLOSE = 2212;

    const FLARE_CONNECT_OPEN = 2221;
    const FLARE_CONNECT_CLOSE = 2222;

    const ROMA_CONNECT_OPEN = 2231;
    const ROMA_CONNECT_CLOSE = 2232;

    const MONGODB_CONNECT_OPEN = 2301;
    const MONGODB_CONNECT_CLOSE = 2302;
    const MONGODB_CONNETCT_QUERY = 2303;
    const MONGODB_OPER_DELETE = 230302;
    //        const MONGODB_OPER_UPDATE = 230303;
    const MONGODB_OPER_SELECT = 230304;

    const MONGODB_OPER_INDEXES = 23030101;  //'INDEXES',
    const MONGODB_OPER_INDEXEXISTS = 23030102;  //'INDEXEXISTS',
    const MONGODB_OPER_INDEXINFORMATION = 23030103;  //'INDEXINFORMATION',
    const MONGODB_OPER_INSERT = 23030104;  //INSERT

    const MONGODB_OPER_INSERTMANY = 23030105;  // 'INSERTMANY',
    const MONGODB_OPER_INSERTONE = 23030106;  // 'INSERTONE',
    const MONGODB_OPER_DROP = 23030201;  //'DROP',
    const MONGODB_OPER_DROPALLINDEXES = 23030202;  //'DROPALLINDEXES',
    const MONGODB_OPER_DROPINDEX = 23030203;  //'DROPINDEX',
    const MONGODB_OPER_REMOVE = 23030204;  //'REMOVE',
    const MONGODB_OPER_DELETEMANY = 23030205;  //'DELETEMANY',
    const MONGODB_OPER_DELETEONE = 23030206;  // 'DELETEONE',
    const MONGODB_OPER_UPDATE = 23030301;  //UPDATE

    const MONGODB_OPER_UPDATEMANY = 23030302;  //  'UPDATEMANY',
    const MONGODB_OPER_UPDATEONE = 23030303;  //'UPDATEONE'
    const MONGODB_OPER_FINDONE = 23030401;  //'FINDONE',
    const MONGODB_OPER_FINDANDMODIFY = 23030402;  //'FINDANDMODIFY',
    const MONGODB_OPER_FINDANDREMOVE = 23030403;  //'FINDANDREMOVE',
    const MONGODB_OPER_FINDONEANDDELETE = 23030404;  //'FINDONEANDDELETE',
    const MONGODB_OPER_FINDONEANDREPLACE = 23030405;  //'FINDONEANDREPLACE',
    const MONGODB_OPER_FINDONEANDUPDATE = 23030406;  //'FINDONEANDUPDATE',
    const MONGODB_OPER_BULKWRITE = 230305;   //'BULKWRITE',
    const MONGODB_OPER_AGGREGATE = 230306;   //'AGGREGATE',
    const MONGODB_OPER_COUNT = 230307;   //'COUNT',
    const MONGODB_OPER_CREATEINDEX = 230308;   //'CREATEINDEX',
    const MONGODB_OPER_DISTINCT = 230309;  //'DISTINCT',
    const MONGODB_OPER_ENSUREINDEX = 2303010;  //'ENSUREINDEX',
    const MONGODB_OPER_GEOHAYSTACKSEARCH = 2303011;  //'GEOHAYSTACKSEARCH',
    const MONGODB_OPER_GEONEAR = 2303012;  //'GEONEAR',
    const MONGODB_OPER_GROUP = 2303013;  //'GROUP',
    const MONGODB_OPER_ISCAPPED = 2303014;  //'ISCAPPED',
    const MONGODB_OPER_MAPREDUCE = 2303015;  //'MAPREDUCE',
    const MONGODB_OPER_OPTIONS = 2303016;  //'OPTIONS',
    const MONGODB_OPER_PARALLELCOLLECTIONSCAN = 2303017;  //'PARALLELCOLLECTIONSCAN',
    const MONGODB_OPER_REINDEX = 2303018;  //'REINDEX',
    const MONGODB_OPER_RENAME = 2303019;  //'RENAME',
    const MONGODB_OPER_REPLACEONE = 2303020;  //'REPLACEONE',
    const MONGODB_OPER_SAVE = 2303021;  //'SAVE',
    const MONGODB_OPER_STATS = 2303022;  //'STATS',

    const MONGODB_OPER_findById = 23030410;  //'findById',
    const MONGODB_OPER_findByIdAndRemove = 23030407;  //'findByIdAndRemove',
    const MONGODB_OPER_find = 23030408;  //'find',
    const MONGODB_OPER_findByIdAndUpdate = 23030409;  //'findByIdAndUpdate',

    const DOTNET_MONGODB_SEND_TWO_WAY_MESSAGE_CONNECTION = 230353;
    const DOTNET_MONGODB_SEND_TWO_WAY_MESSAGE_CORE_CONNECTION = 230354;
    const DOTNET_MONGODB_SEND_MSG_MESSAGE_CONNECTION = 230355;
    const DOTNET_MONGODB_OPEN_CONNECTION = 230356;
    const DOTNET_MONGODB_CLOSE_CONNECTION = 230357;
    const DOTNET_MONGODB_REPLACE_INVALID_CONNECTION_CONNECTION = 230358;
    const DOTNET_MONGODB_SEND_COMMAND_CONNECTION = 230359;
    const DOTNET_MONGODB_DISPOSE_CONNECTION = 230360;
    const DOTNET_MONGODB_GET_DOCUMENT = 230361;
    const DOTNET_MONGODB_TRY_GET_VALUE_DOCUMENT = 230362;
    const DOTNET_MONGODB_CONTAINS_KEY_DOCUMENT = 230363;
    const DOTNET_MONGODB_ADD_DOCUMENT = 230364;
    const DOTNET_MONGODB_APPEND_DOCUMENT = 230365;
    const DOTNET_MONGODB_SET_DOCUMENT = 230366;
    const DOTNET_MONGODB_INSERT_DOCUMENT = 230367;
    const DOTNET_MONGODB_PREPEND_DOCUMENT = 230368;
    const DOTNET_MONGODB_MERGE_DOCUMENT = 230369;
    const DOTNET_MONGODB_CLEAR_DOCUMENT = 230323;
    const DOTNET_MONGODB_COPY_TO_DOCUMENT = 230324;
    const DOTNET_MONGODB_REMOVE_DOCUMENT = 230370;
    const DOTNET_MONGODB_EQUALS_DOCUMENT = 230325;
    const DOTNET_MONGODB_GET_HASH_CODE_DOCUMENT = 230326;
    const DOTNET_MONGODB_GET_VALUE_HASH_CODE_DOCUMENT = 230327;
    const DOTNET_MONGODB_GET_ARRAY_HASH_CODE_DOCUMENT = 230328;
    const DOTNET_MONGODB_TO_DICTIONARY_DOCUMENT = 230329;
    const DOTNET_MONGODB_TO_STRING_DOCUMENT = 230330;
    const DOTNET_MONGODB_FIND_ONE_MONGOCOLLECTION = 230331;
    const DOTNET_MONGODB_FIND_ALL_MONGOCOLLECTION = 230332;
    const DOTNET_MONGODB_FIND_MONGOCOLLECTION = 230333;
    const DOTNET_MONGODB_FIND_AND_MODIFY_MONGOCOLLECTION = 230334;
    const DOTNET_MONGODB_MAP_REDUCE_MONGOCOLLECTION = 230335;
    const DOTNET_MONGODB_COUNT_MONGOCOLLECTION = 230336;
    const DOTNET_MONGODB_DELETE_MONGOCOLLECTION = 230337;
    const DOTNET_MONGODB_UPDATE_MONGOCOLLECTION = 230338;
    const DOTNET_MONGODB_UPDATE_ALL_MONGOCOLLECTION = 230339;
    const DOTNET_MONGODB_SAVE_MONGOCOLLECTION = 230340;
    const DOTNET_MONGODB_MONGO_DATA_BASE_MONGOCOLLECTION = 230341;
    const DOTNET_MONGODB_GET_COLLECTION_NAMES_MONGOCOLLECTION = 230342;
    const DOTNET_MONGODB_GET_COLLECTION_MONGOCOLLECTION = 230343;
    const DOTNET_MONGODB_FOLLOW_REFERENCE_MONGOCOLLECTION = 230344;
    const DOTNET_MONGODB_GET_LAST_ERROR_MONGOCOLLECTION = 230345;
    const DOTNET_MONGODB_GET_PREVIOUS_ERROR_MONGOCOLLECTION = 230346;
    const DOTNET_MONGODB_GET_SISTER_DATABASE_MONGOCOLLECTION = 230347;
    const DOTNET_MONGODB_RESET_ERROR_MONGOCOLLECTION = 230348;
    const DOTNET_MONGODB_EVAL_MONGOCOLLECTION = 230349;
    const DOTNET_MONGODB_INSERT_MONGOCOLLECTION = 230350;
    const DOTNET_MONGODB_REMOVE_MONGOCOLLECTION = 230351;
    const DOTNET_MONGODB_SEND_COMMAND_MONGOCOLLECTION = 230352;

    const PHP_MONGO_CLIENT_CONNECT = 230501;
    const PHP_MONGO_COLLECTION_AGGREGATE = 230502;
    const PHP_MONGO_COLLECTION_AGGREGATECURSOR = 230503;
    const PHP_MONGO_COLLECTION_BATCHINSERT = 230504;
    const PHP_MONGO_COLLECTION_COUNT = 230505;
    const PHP_MONGO_COLLECTION_CREATEINDEX = 230506;
    const PHP_MONGO_COLLECTION_DELETEINDEX = 230507;
    const PHP_MONGO_COLLECTION_DELETEINDEXES = 230508;
    const PHP_MONGO_COLLECTION_DISTINCT = 230509;
    const PHP_MONGO_COLLECTION_DROP = 230510;
    const PHP_MONGO_COLLECTION_ENSUREINDEX = 230511;
    const PHP_MONGO_COLLECTION_FIND = 230512;
    const PHP_MONGO_COLLECTION_FINDANDMODIFY = 230513;
    const PHP_MONGO_COLLECTION_FINDONE = 230514;
    const PHP_MONGO_COLLECTION_GETDBREF = 230515;
    const PHP_MONGO_COLLECTION_GETINDEXINFO = 230516;
    const PHP_MONGO_COLLECTION_CREATEDBREF = 230517;
    const PHP_MONGO_COLLECTION_GROUP = 230518;
    const PHP_MONGO_COLLECTION_INSERT = 230519;
    const PHP_MONGO_COLLECTION_REMOVE = 230520;
    const PHP_MONGO_COLLECTION_SAVE = 230521;
    const PHP_MONGO_COLLECTION_UPDATE = 230522;
    const PHP_MONGO_MANAGER_CONSTRUCT = 230523;
    const PHP_MONGO_MANAGER_EXECUTEBULKWRITE = 230524;
    const PHP_MONGO_MANAGER_EXECUTECOMMAND = 230525;
    const PHP_MONGO_MANAGER_EXECUTEQUERY = 230526;

    const NODEJS_MONGO_COLLECTION_AGGREGATE = 230401;
    const NODEJS_MONGO_COLLECTION_BULKWRITE = 230402;
    const NODEJS_MONGO_COLLECTION_COUNT = 230403;
    const NODEJS_MONGO_COLLECTION_CREATEINDEX = 230404;
    const NODEJS_MONGO_COLLECTION_CREATEINDEXES = 230405;
    const NODEJS_MONGO_COLLECTION_DELETEMANY = 230406;
    const NODEJS_MONGO_COLLECTION_DELETEONE = 230407;
    const NODEJS_MONGO_COLLECTION_DISTINCT = 230408;
    const NODEJS_MONGO_COLLECTION_DROP = 230409;
    const NODEJS_MONGO_COLLECTION_DROPALLINDEXES = 230410;
    const NODEJS_MONGO_COLLECTION_DROPINDEX = 230411;
    const NODEJS_MONGO_COLLECTION_DROPINDEXES = 230412;
    const NODEJS_MONGO_COLLECTION_ENSUREINDEX = 230413;
    const NODEJS_MONGO_COLLECTION_FIND = 230414;
    const NODEJS_MONGO_COLLECTION_FINDANDMODIFY = 230415;
    const NODEJS_MONGO_COLLECTION_FINDANDREMOVE = 230416;
    const NODEJS_MONGO_COLLECTION_FINDONE = 230417;
    const NODEJS_MONGO_COLLECTION_FINDONEANDDELETE = 230418;
    const NODEJS_MONGO_COLLECTION_FINDONEANDREPLACE = 230419;
    const NODEJS_MONGO_COLLECTION_FINDONEANDUPDATE = 230420;
    const NODEJS_MONGO_COLLECTION_GEOHAYSTACKSEARCH = 230421;
    const NODEJS_MONGO_COLLECTION_GEONEAR = 230422;
    const NODEJS_MONGO_COLLECTION_GROUP = 230423;
    const NODEJS_MONGO_COLLECTION_INDEXES = 230424;
    const NODEJS_MONGO_COLLECTION_INDEXEXISTS = 230425;
    const NODEJS_MONGO_COLLECTION_INDEXINFORMATION = 230426;
    const NODEJS_MONGO_COLLECTION_INITIALIZEORDEREDBULKOP = 230427;
    const NODEJS_MONGO_COLLECTION_INITIALIZEUNORDEREDBULKOP = 230428;
    const NODEJS_MONGO_COLLECTION_INSERT = 230429;
    const NODEJS_MONGO_COLLECTION_INSERTMANY = 230430;
    const NODEJS_MONGO_COLLECTION_INSERTONE = 230431;
    const NODEJS_MONGO_COLLECTION_ISCAPPED = 230432;
    const NODEJS_MONGO_COLLECTION_LISTINDEXES = 230433;
    const NODEJS_MONGO_COLLECTION_MAPREDUCE = 230434;
    const NODEJS_MONGO_COLLECTION_OPTIONS = 230435;
    const NODEJS_MONGO_COLLECTION_PARALLELCOLLECTIONSCAN = 230436;
    const NODEJS_MONGO_COLLECTION_REINDEX = 230437;
    const NODEJS_MONGO_COLLECTION_REMOVE = 230438;
    const NODEJS_MONGO_COLLECTION_RENAME = 230439;
    const NODEJS_MONGO_COLLECTION_REPLACEONE = 230440;
    const NODEJS_MONGO_COLLECTION_SAVE = 230441;
    const NODEJS_MONGO_COLLECTION_STATS = 230442;
    const NODEJS_MONGO_COLLECTION_UPDATE = 230443;
    const NODEJS_MONGO_COLLECTION_UPDATEMANY = 230444;
    const NODEJS_MONGO_COLLECTION_UPDATEONE = 230445;
    const NODEJS_MONGO_DB_ADDUSER = 230446;
    const NODEJS_MONGO_DB_ADMIN = 230447;
    const NODEJS_MONGO_DB_AUTHENTICATE = 230448;
    const NODEJS_MONGO_DB_CLOSE = 230449;
    const NODEJS_MONGO_DB_COLLECTION = 230450;
    const NODEJS_MONGO_DB_COLLECTIONS = 230451;
    const NODEJS_MONGO_DB_COMMAND = 230452;
    const NODEJS_MONGO_DB_CREATECOLLECTION = 230453;
    const NODEJS_MONGO_DB_CREATEINDEX = 230454;
    const NODEJS_MONGO_DB_DB = 230455;
    const NODEJS_MONGO_DB_DROPCOLLECTION = 230456;
    const NODEJS_MONGO_DB_DROPDATABASE = 230457;
    const NODEJS_MONGO_DB_ENSUREINDEX = 230458;
    const NODEJS_MONGO_DB_EVAL = 230459;
    const NODEJS_MONGO_DB_EXECUTEDBADMINCOMMAND = 230460;
    const NODEJS_MONGO_DB_INDEXINFORMATION = 230461;
    const NODEJS_MONGO_DB_LISTCOLLECTIONS = 230462;
    const NODEJS_MONGO_DB_LOGOUT = 230463;
    const NODEJS_MONGO_DB_OPEN = 230464;
    const NODEJS_MONGO_DB_REMOVEUSER = 230465;
    const NODEJS_MONGO_DB_RENAMECOLLECTION = 230466;
    const NODEJS_MONGO_DB_STATS = 230467;
    const NODEJS_MONGO_DB_UNREF = 230468;

    const NODEJS_MEMCACHED_GET = 21218;
    const NODEJS_MEMCACHED_SET = 21219;
    const NODEJS_MEMCACHED_REPLACE = 21220;
    const NODEJS_MEMCACHED_GETS = 21221;
    const NODEJS_MEMCACHED_ADD = 21222;
    const NODEJS_MEMCACHED_TOUCH = 21223;
    const NODEJS_MEMCACHED_DEL = 21224;
    const NODEJS_MEMCACHED_APPEND = 21225;
    const NODEJS_MEMCACHED_GETMULTI = 21226;
    const NODEJS_MEMCACHED_PREPREND = 21227;
    const NODEJS_MEMCACHED_INCR = 21228;
    const NODEJS_MEMCACHED_DECR = 21229;


    const NODEJS_REDIS_SADD = 22120001;
    const NODEJS_REDIS_MULTI = 22120002;
    const NODEJS_REDIS_SCARD = 22120003;
    const NODEJS_REDIS_SMEMBERS = 22120004;
    const NODEJS_REDIS_KEYS = 22120005;
    const NODEJS_REDIS_DBSIZE = 22120006;
    const NODEJS_REDIS_ZADD = 22120008;
    const NODEJS_REDIS_MONITOR = 22120009;
    const NODEJS_REDIS_HMSET = 22120010;
    const NODEJS_REDIS_EXEC = 22120007;
    const NODEJS_REDIS_HGETALL = 22120011;
    const NODEJS_REDIS_HSET = 22120012;
    const NODEJS_REDIS_HKEYS = 22120013;
    const NODEJS_REDIS_SET = 22120014;
    const NODEJS_REDIS_GET = 22120015;
    const NODEJS_REDIS_DEL = 22120016;


    const COUCHDB_CONNECT_OPEN = 2311;
    const COUCHDB_CONNECT_CLOSE = 2312;

    const CASSANDRA_CONNECT_OPEN = 2401;
    const CASSANDRA_CONNECT_CLOSE = 2402;

    const HBASE_CONNECT_OPEN = 2411;
    const HBASE_CONNECT_CLOSE = 2412;

    const HYPERTABLE_CONNECT_OPEN = 2411;
    const HYPERTABLE_CONNECT_CLOSE = 2412;

    /**
     * 数据库标记对应名称.
     *
     * @var array
     */
    public static $MYSQL_NAME = [
        'm'   => 'Mysql',
        'sq'  => 'SQLServer',
        'or'  => 'Oracle',
        'r'   => 'Redis',
        'po'  => 'Postgresql',
        'me'  => 'Memcache',
        'mo'  => 'Mongodb',
        'db2' => 'DB2',
    ];

    public static $NOSQL = [
        'r'  => 'Redis',
        'me' => 'Memcache',
        'mo' => 'Mongodb',
    ];

    public static $SQL = [
        'm'   => 'Mysql',
        'sq'  => 'SQLServer',
        'or'  => 'Oracle',
        'po'  => 'Postgresql',
        'db2' => 'DB2',
    ];

    /**
     * @param $appCodeType
     *
     * @return array
     */
    public static function getNosqlMemcachePst($appCodeType, $memcache_flag = false)
    {
        $common_keys = self::$common_memcache;
        $code_keys = [];
        switch ($appCodeType) {
            case ReportAppTopologyEnum::TOPO_PHP:
                if ($memcache_flag == ServiceTypeEnum::TYPE_MEMCACHED_TRUE) {
                    $code_keys = self::$php_memcached;

                    return $code_keys;
                } else {
                    $code_keys = self::$php_memcache;
                }
                break;
            case ReportAppTopologyEnum::TOPO_JAVA:
                $code_keys = self::$java_memcache;
                break;
            case ReportAppTopologyEnum::TOPO_DOTNET:
                $code_keys = self::$dotnet_memcache;
                break;
            case ReportAppTopologyEnum::TOPO_NODEJS:
                if ($memcache_flag == ServiceTypeEnum::TYPE_MEMCACHED_TRUE) {
                    $code_keys = self::$node_memcached;

                    return $code_keys;
                } else {
                    $code_keys = self::$node_memcache;
                }
                break;
            case ReportAppTopologyEnum::TOPO_PYTHON:
                $code_keys = self::$python_memcache;
                break;
        }

        $return = $common_keys + $code_keys;

        return $return;
    }

    public static function getNosqlRedisPst($appCodeType)
    {
        $return = self::$common_redis;
        if ($appCodeType == ReportAppTopologyEnum::TOPO_DOTNET) {
            $return += self::$dotnet_redis;
        }
        switch ($appCodeType) {
            case ReportAppTopologyEnum::TOPO_DOTNET:
                $return += self::$dotnet_redis;
                break;
            case ReportAppTopologyEnum::TOPO_PHP:
                $return += self::$php_redis;
                break;
            case ReportAppTopologyEnum::TOPO_NODEJS:
                $return += self::$nodejs_redis;
                break;
            default:
                break;
        }

        return $return;
    }

    public static function getNosqlMongoPst($app_code_type)
    {
        $return = self::$mongo_common;
        switch ($app_code_type) {
            case ReportAppTopologyEnum::TOPO_DOTNET:
                $return += self::$mongo_dotnet;
                break;
            case ReportAppTopologyEnum::TOPO_PHP:
                $return += self::$mongo_php;
                break;
            case ReportAppTopologyEnum::TOPO_JAVA:
                $return += self::$mongo_java;
                break;
            case ReportAppTopologyEnum::TOPO_NODEJS:
                $return += self::$mongo_nodejs;
                break;
                break;
            case ReportAppTopologyEnum::TOPO_PYTHON:
                $return += self::$mongo_python;
                break;
        }

        return $return;
    }

    public static $unknown_pst = [
        self::UNKNOWN_MEMCACHE,
        self::UNKNOWN_REDIS,
        self::UNKNOWN_MONGODB,
    ];

    public static $nodejs_redis = [
        self::NODEJS_REDIS_SADD     => 'SADD',
        self::NODEJS_REDIS_MULTI    => 'MULTI',
        self::NODEJS_REDIS_SCARD    => 'SCARD',
        self::NODEJS_REDIS_SMEMBERS => 'SMEMBERS',
        self::NODEJS_REDIS_KEYS     => 'KEYS',
        self::NODEJS_REDIS_DBSIZE   => 'DBSIZE',
        self::NODEJS_REDIS_EXEC     => 'EXEC',
        self::NODEJS_REDIS_ZADD     => 'ZADD',
        self::NODEJS_REDIS_MONITOR  => 'MONITOR',
        self::NODEJS_REDIS_HMSET    => 'HMSET',
        self::NODEJS_REDIS_HGETALL  => 'HGETALL',
        self::NODEJS_REDIS_HSET     => 'HSET',
        self::NODEJS_REDIS_HKEYS    => 'HKEYS',
        self::NODEJS_REDIS_SET      => 'SET',
        self::NODEJS_REDIS_GET      => 'GET',
        self::NODEJS_REDIS_DEL      => 'DEL',
    ];

    public static $dotnet_redis = [
        self::DOTNET_REDIS_NEW                                       => 'NEW',
        self::DOTNET_REDIS_CUSTOM                                    => 'CUSTOM',
        self::DOTNET_REDIS_CONVERT_TO_SERVER_DATE                    => 'CONVERT_TO_SERVER_DATE',
        self::DOTNET_REDIS_GET_TYPE_SEQUENCE_KEY                     => 'GET_TYPE_SEQUENCE_KEY',
        self::DOTNET_REDIS_GET_TYPE_IDS_SET_KEY                      => 'GET_TYPE_IDS_SET_KEY',
        self::DOTNET_REDIS_GET_ALL_KEYS                              => 'GET_ALL_KEYS',
        self::DOTNET_REDIS_SET_ENTRY                                 => 'SET_ENTRY',
        self::DOTNET_REDIS_SET_VALUE                                 => 'SET_VALUE',
        self::DOTNET_REDIS_SET_ENTRY_IF_EXISTS                       => 'SET_ENTRY_IF_EXISTS',
        self::DOTNET_REDIS_SET_VALUE_IF_EXISTS                       => 'SET_VALUE_IF_EXISTS',
        self::DOTNET_REDIS_SET_ENTRY_IF_NOT_EXISTS                   => 'SET_ENTRY_IF_NOT_EXISTS',
        self::DOTNET_REDIS_SET_VALUE_IF_NOT_EXISTS                   => 'SET_VALUE_IF_NOT_EXISTS',
        self::DOTNET_REDIS_CHANGE_DB                                 => 'CHANGE_DB',
        self::DOTNET_REDIS_GET_CLIENT_LIST                           => 'GET_CLIENT_LIST',
        self::DOTNET_REDIS_SET_VALUES                                => 'SET_VALUES',
        self::DOTNET_REDIS_SET_ALL                                   => 'SET_ALL',
        self::DOTNET_REDIS_GET_ENTRY                                 => 'GET_ENTRY',
        self::DOTNET_REDIS_GET_VALUE                                 => 'GET_VALUE',
        self::DOTNET_REDIS_GET_AND_SET_ENTRY                         => 'GET_AND_SET_ENTRY',
        self::DOTNET_REDIS_GET_AND_SET_VALUE                         => 'GET_AND_SET_VALUE',
        self::DOTNET_REDIS_CONTAINS_KEY                              => 'CONTAINS_KEY',
        self::DOTNET_REDIS_REMOVE_ENTRY                              => 'REMOVE_ENTRY',
        self::DOTNET_REDIS_REMOVE                                    => 'REMOVE',
        self::DOTNET_REDIS_INCREMENT_VALUE                           => 'INCREMENT_VALUE',
        self::DOTNET_REDIS_INCREMENT_VALUE_BY                        => 'INCREMENT_VALUE_BY',
        self::DOTNET_REDIS_DECREMENT_VALUE                           => 'DECREMENT_VALUE',
        self::DOTNET_REDIS_DECREMENT_VALUE_BY                        => 'DECREMENT_VALUE_BY',
        self::DOTNET_REDIS_APPEND_TO_VALUE                           => 'APPEND_TO_VALUE',
        self::DOTNET_REDIS_RENAME_KEY                                => 'RENAME_KEY',
        self::DOTNET_REDIS_GET_STRING_COUNT                          => 'GET_STRING_COUNT',
        self::DOTNET_REDIS_GET_RANDOM_KEY                            => 'GET_RANDOM_KEY',
        self::DOTNET_REDIS_EXPIRE_ENTRY_IN                           => 'EXPIRE_ENTRY_IN',
        self::DOTNET_REDIS_EXPIRE_ENTRY_AT                           => 'EXPIRE_ENTRY_AT',
        self::DOTNET_REDIS_GET_TIME_TO_LIVE                          => 'GET_TIME_TO_LIVE',
        self::DOTNET_REDIS_ACQUIRE_LOCK                              => 'ACQUIRE_LOCK',
        self::DOTNET_REDIS_CREATE_TRANSACTION                        => 'CREATE_TRANSACTION',
        self::DOTNET_REDIS_ASSERT_NOT_IN_TRANSACTION                 => 'ASSERT_NOT_IN_TRANSACTION',
        self::DOTNET_REDIS_CREATE_PIPELINE                           => 'CREATE_PIPELINE',
        self::DOTNET_REDIS_SEARCH_KEYS                               => 'SEARCH_KEYS',
        self::DOTNET_REDIS_GET_VALUES                                => 'GET_VALUES',
        self::DOTNET_REDIS_GET_VALUES_MAP                            => 'GET_VALUES_MAP',
        self::DOTNET_REDIS_CREATE_SUBSCRIPTION                       => 'CREATE_SUBSCRIPTION',
        self::DOTNET_REDIS_PUBLISH_MESSAGE                           => 'PUBLISH_MESSAGE',
        self::DOTNET_REDIS_GET_REGISTERED_TYPE_IDS_WITHIN_PIPELINE   => 'GET_REGISTERED_TYPE_IDS_WITHIN_PIPELINE',
        self::DOTNET_REDIS_REGISTER_TYPE_ID                          => 'REGISTER_TYPE_ID',
        self::DOTNET_REDIS_REGISTER_TYPE_IDS                         => 'REGISTER_TYPE_IDS',
        self::DOTNET_REDIS_REMOVE_TYPE_IDS                           => 'REMOVE_TYPE_IDS',
        self::DOTNET_REDIS_ADD_TYPE_IDS_REGISTERED_DURING_PIPELINE   => 'ADD_TYPE_IDS_REGISTERED_DURING_PIPELINE',
        self::DOTNET_REDIS_GET_BY_ID                                 => 'GET_BY_ID',
        self::DOTNET_REDIS_CLEAR_TYPE_IDS_REGISTERED_DURING_PIPELINE => 'CLEAR_TYPE_IDS_REGISTERED_DURING_PIPELINE',
        self::DOTNET_REDIS_GET_BY_IDS                                => 'GET_BY_IDS',
        self::DOTNET_REDIS_GET_ALL                                   => 'GET_ALL',
        self::DOTNET_REDIS_STORE_OBJECT                              => 'STORE_OBJECT',
        self::DOTNET_REDIS_STORE_ALL                                 => 'STORE_ALL',
        self::DOTNET_REDIS_GET_FROM_HASH                             => 'GET_FROM_HASH',
        self::DOTNET_REDIS_STORE_AS_HASH                             => 'STORE_AS_HASH',
        self::DOTNET_REDIS__STORE_ALL                                => '_STORE_ALL',
        self::DOTNET_REDIS_WRITE_ALL                                 => 'WRITE_ALL',
        self::DOTNET_REDIS_SERIALIZE_TO_UTF8_BYTES                   => 'SERIALIZE_TO_UTF8_BYTES',
        self::DOTNET_REDIS_DELETE                                    => 'DELETE',
        self::DOTNET_REDIS_DELETE_BY_ID                              => 'DELETE_BY_ID',
        self::DOTNET_REDIS_DELETE_BY_IDS                             => 'DELETE_BY_IDS',
        self::DOTNET_REDIS_DELETE_ALL                                => 'DELETE_ALL',
        self::DOTNET_REDIS_CLONE_CLIENT                              => 'CLONE_CLIENT',
        self::DOTNET_REDIS_URN_KEY                                   => 'URN_KEY',
        self::DOTNET_REDIS_EXEC_CACHED_LUA                           => 'EXEC_CACHED_LUA',
        self::DOTNET_REDIS_EXEC_LUA                                  => 'EXEC_LUA',
        self::DOTNET_REDIS_EXEC_LUA_AS_INT                           => 'EXEC_LUA_AS_INT',
        self::DOTNET_REDIS_EXEC_LUA_SHA_AS_INT                       => 'EXEC_LUA_SHA_AS_INT',
        self::DOTNET_REDIS_EXEC_LUA_AS_STRING                        => 'EXEC_LUA_AS_STRING',
        self::DOTNET_REDIS_EXEC_LUA_SHA_AS_STRING                    => 'EXEC_LUA_SHA_AS_STRING',
        self::DOTNET_REDIS_EXEC_LUA_AS_LIST                          => 'EXEC_LUA_AS_LIST',
        self::DOTNET_REDIS_HAS_LUA_SCRIPT                            => 'HAS_LUA_SCRIPT',
        self::DOTNET_REDIS_WHICH_LUA_SCRIPTS_EXISTS                  => 'WHICH_LUA_SCRIPTS_EXISTS',
        self::DOTNET_REDIS_REMOVE_ALL_LUA_SCRIPTS                    => 'REMOVE_ALL_LUA_SCRIPTS',
        self::DOTNET_REDIS_KILL_RUNNING_LUA_SCRIPT                   => 'KILL_RUNNING_LUA_SCRIPT',
        self::DOTNET_REDIS_LOAD_LUA_SCRIPT                           => 'LOAD_LUA_SCRIPT',
        self::DOTNET_REDIS_REMOVE_BY_PATTERN                         => 'REMOVE_BY_PATTERN',
        self::DOTNET_REDIS_REMOVE_BY_REGEX                           => 'REMOVE_BY_REGEX',
        self::DOTNET_REDIS_SCAN_ALL_KEYS                             => 'SCAN_ALL_KEYS',
        self::DOTNET_REDIS_SCAN_ALL_SET_ITEMS                        => 'SCAN_ALL_SET_ITEMS',
        self::DOTNET_REDIS_SCAN_ALL_SORTED_SETITEMS                  => 'SCAN_ALL_SORTED_SETITEMS',
        self::DOTNET_REDIS_SCAN_ALL_HASH_ENTRIES                     => 'SCAN_ALL_HASH_ENTRIES',
        self::DOTNET_REDIS_ADD_TO_HYPER_LOG                          => 'ADD_TO_HYPER_LOG',
        self::DOTNET_REDIS_COUNT_HYPER_LOG                           => 'COUNT_HYPER_LOG',
        self::DOTNET_REDIS_MERGE_HYPER_LOGS                          => 'MERGE_HYPER_LOGS',
        self::DOTNET_REDIS_GET_SERVER_ROLE                           => 'GET_SERVER_ROLE',
        self::DOTNET_REDIS_TO_SERVER_ROLE                            => 'TO_SERVER_ROLE',
        self::DOTNET_REMOVEALL                                       => 'REMOVEALL',
        self::DOTNET_INCREMENT                                       => 'INCREMENT',
        self::DOTNET_DECREMENT                                       => 'DECREMENT',
        self::DOTNET_ADD                                             => 'ADD',
        self::DOTNET_REPLACE                                         => 'REPLACE',
        self::DOTNET_GET                                             => 'GET',
        self::DOTNET_SET                                             => 'SET',
        self::DOTNET_DISPOSECONNECTION                               => 'DISPOSECONNECTION',
        self::DOTNET_CONNECT                                         => 'CONNECT',
    ];

    public static $mongo_common = [
        self::MONGODB_CONNETCT_QUERY              => 'query',
        self::MONGODB_OPER_INSERT                 => 'insert',
        self::MONGODB_OPER_DELETE                 => 'delete',
        self::MONGODB_OPER_UPDATE                 => 'update',
        self::MONGODB_OPER_SELECT                 => 'select',
        self::MONGODB_OPER_INDEXES                => 'indexes',
        self::MONGODB_OPER_INDEXEXISTS            => 'indexExists',
        self::MONGODB_OPER_INDEXINFORMATION       => 'indexInformation',
        self::MONGODB_OPER_INSERTMANY             => 'insertMany',
        self::MONGODB_OPER_INSERTONE              => 'insertOne',
        self::MONGODB_OPER_DROP                   => 'drop',
        self::MONGODB_OPER_DROPALLINDEXES         => 'dropAllIndexes',
        self::MONGODB_OPER_DROPINDEX              => 'dropIndex',
        self::MONGODB_OPER_REMOVE                 => 'remove',
        self::MONGODB_OPER_DELETEMANY             => 'deleteMany',
        self::MONGODB_OPER_DELETEONE              => 'deleteOne',
        self::MONGODB_OPER_UPDATEMANY             => 'updateMany',
        self::MONGODB_OPER_UPDATEONE              => 'updateOne',
        self::MONGODB_OPER_FINDONE                => 'findOne',
        self::MONGODB_OPER_FINDANDMODIFY          => 'findAndModify',
        self::MONGODB_OPER_FINDANDREMOVE          => 'findAndRemove',
        self::MONGODB_OPER_FINDONEANDDELETE       => 'findOneAndDelete',
        self::MONGODB_OPER_FINDONEANDREPLACE      => 'findOneAndReplace',
        self::MONGODB_OPER_FINDONEANDUPDATE       => 'findOneAndUpdate',
        self::MONGODB_OPER_BULKWRITE              => 'bulkWrite',
        self::MONGODB_OPER_AGGREGATE              => 'aggregate',
        self::MONGODB_OPER_COUNT                  => 'count',
        self::MONGODB_OPER_CREATEINDEX            => 'createIndex',
        self::MONGODB_OPER_DISTINCT               => 'distinct',
        self::MONGODB_OPER_ENSUREINDEX            => 'ensureIndex',
        self::MONGODB_OPER_GEOHAYSTACKSEARCH      => 'geoHaystackSearch',
        self::MONGODB_OPER_GEONEAR                => 'geoNear',
        self::MONGODB_OPER_GROUP                  => 'group',
        self::MONGODB_OPER_ISCAPPED               => 'isCapped',
        self::MONGODB_OPER_MAPREDUCE              => 'mapReduce',
        self::MONGODB_OPER_OPTIONS                => 'options',
        self::MONGODB_OPER_PARALLELCOLLECTIONSCAN => 'parallelCollectionScan',
        self::MONGODB_OPER_REINDEX                => 'reIndex',
        self::MONGODB_OPER_RENAME                 => 'rename',
        self::MONGODB_OPER_REPLACEONE             => 'replaceOne',
        self::MONGODB_OPER_SAVE                   => 'save',
        self::MONGODB_OPER_STATS                  => 'stats',
        self::MONGODB_OPER_findById               => 'findById',
        self::MONGODB_OPER_find                   => 'find',
        self::MONGODB_OPER_findByIdAndUpdate      => 'findByIdAndUpdate',
        self::MONGODB_OPER_findByIdAndRemove      => 'findByIdAndRemove',
    ];

    public static $mongo_dotnet = [
        self::DOTNET_MONGODB_SEND_TWO_WAY_MESSAGE_CONNECTION       => 'Connection.SendTwoWayMessage',
        self::DOTNET_MONGODB_SEND_TWO_WAY_MESSAGE_CORE_CONNECTION  => 'Connection.SendTwoWayMessageCore',
        self::DOTNET_MONGODB_SEND_MSG_MESSAGE_CONNECTION           => 'Connection.SendMsgMessage',
        self::DOTNET_MONGODB_OPEN_CONNECTION                       => 'Connection.Open',
        self::DOTNET_MONGODB_CLOSE_CONNECTION                      => 'Connection.Close',
        self::DOTNET_MONGODB_REPLACE_INVALID_CONNECTION_CONNECTION => 'Connection.ReplaceInvalidConnection',
        self::DOTNET_MONGODB_SEND_COMMAND_CONNECTION               => 'Connection.SendCommand',
        self::DOTNET_MONGODB_DISPOSE_CONNECTION                    => 'Connection.Dispose',
        self::DOTNET_MONGODB_GET_DOCUMENT                          => 'Document.Get',
        self::DOTNET_MONGODB_TRY_GET_VALUE_DOCUMENT                => 'Document.TryGetValue',
        self::DOTNET_MONGODB_CONTAINS_KEY_DOCUMENT                 => 'Document.ContainsKey',
        self::DOTNET_MONGODB_ADD_DOCUMENT                          => 'Document.Add',
        self::DOTNET_MONGODB_APPEND_DOCUMENT                       => 'Document.Append',
        self::DOTNET_MONGODB_SET_DOCUMENT                          => 'Document.Set',
        self::DOTNET_MONGODB_INSERT_DOCUMENT                       => 'Document.Insert',
        self::DOTNET_MONGODB_PREPEND_DOCUMENT                      => 'Document.Prepend',
        self::DOTNET_MONGODB_MERGE_DOCUMENT                        => 'Document.Merge',
        self::DOTNET_MONGODB_CLEAR_DOCUMENT                        => 'Document.Clear',
        self::DOTNET_MONGODB_COPY_TO_DOCUMENT                      => 'Document.CopyTo',
        self::DOTNET_MONGODB_REMOVE_DOCUMENT                       => 'Document.Remove',
        self::DOTNET_MONGODB_EQUALS_DOCUMENT                       => 'Document.Equals',
        self::DOTNET_MONGODB_GET_HASH_CODE_DOCUMENT                => 'Document.GetHashCode',
        self::DOTNET_MONGODB_GET_VALUE_HASH_CODE_DOCUMENT          => 'Document.GetValueHashCode',
        self::DOTNET_MONGODB_GET_ARRAY_HASH_CODE_DOCUMENT          => 'Document.GetArrayHashcode',
        self::DOTNET_MONGODB_TO_DICTIONARY_DOCUMENT                => 'Document.ToDictionary',
        self::DOTNET_MONGODB_TO_STRING_DOCUMENT                    => 'Document.ToString',
        self::DOTNET_MONGODB_FIND_ONE_MONGOCOLLECTION              => 'MongoCollection.FindOne',
        self::DOTNET_MONGODB_FIND_ALL_MONGOCOLLECTION              => 'MongoCollection.FindAll',
        self::DOTNET_MONGODB_FIND_MONGOCOLLECTION                  => 'MongoCollection.Find',
        self::DOTNET_MONGODB_FIND_AND_MODIFY_MONGOCOLLECTION       => 'MongoCollection.FindAndModify',
        self::DOTNET_MONGODB_MAP_REDUCE_MONGOCOLLECTION            => 'MongoCollection.MapReduce',
        self::DOTNET_MONGODB_COUNT_MONGOCOLLECTION                 => 'MongoCollection.Count',
        self::DOTNET_MONGODB_DELETE_MONGOCOLLECTION                => 'MongoCollection.Delete',
        self::DOTNET_MONGODB_UPDATE_MONGOCOLLECTION                => 'MongoCollection.Update',
        self::DOTNET_MONGODB_UPDATE_ALL_MONGOCOLLECTION            => 'MongoCollection.UpdateAll',
        self::DOTNET_MONGODB_SAVE_MONGOCOLLECTION                  => 'MongoCollection.Save',
        self::DOTNET_MONGODB_MONGO_DATA_BASE_MONGOCOLLECTION       => 'MongoCollection.MongoDatabase',
        self::DOTNET_MONGODB_GET_COLLECTION_NAMES_MONGOCOLLECTION  => 'MongoCollection.GetCollectionNames',
        self::DOTNET_MONGODB_GET_COLLECTION_MONGOCOLLECTION        => 'MongoCollection.GetCollection',
        self::DOTNET_MONGODB_FOLLOW_REFERENCE_MONGOCOLLECTION      => 'MongoCollection.FollowReference',
        self::DOTNET_MONGODB_GET_LAST_ERROR_MONGOCOLLECTION        => 'MongoCollection.GetLastError',
        self::DOTNET_MONGODB_GET_PREVIOUS_ERROR_MONGOCOLLECTION    => 'MongoCollection.GetPreviousError',
        self::DOTNET_MONGODB_GET_SISTER_DATABASE_MONGOCOLLECTION   => 'MongoCollection.GetSisterDatabase',
        self::DOTNET_MONGODB_RESET_ERROR_MONGOCOLLECTION           => 'MongoCollection.ResetError',
        self::DOTNET_MONGODB_EVAL_MONGOCOLLECTION                  => 'MongoCollection.Eval',
        self::DOTNET_MONGODB_INSERT_MONGOCOLLECTION                => 'MongoCollection.Insert',
        self::DOTNET_MONGODB_REMOVE_MONGOCOLLECTION                => 'MongoCollection.Remove',
        self::DOTNET_MONGODB_SEND_COMMAND_MONGOCOLLECTION          => 'MongoCollection.SendCommand',
    ];

    public static $mongo_php = [
        self::PHP_MONGO_CLIENT_CONNECT             => 'MongoClient::connec',
        self::PHP_MONGO_COLLECTION_AGGREGATE       => 'MongoCollection::aggregate',
        self::PHP_MONGO_COLLECTION_AGGREGATECURSOR => 'MongoCollection::aggregateCursor',
        self::PHP_MONGO_COLLECTION_BATCHINSERT     => 'MongoCollection::batchInsert',
        self::PHP_MONGO_COLLECTION_COUNT           => 'MongoCollection::count',
        self::PHP_MONGO_COLLECTION_CREATEINDEX     => 'MongoCollection::createIndex',
        self::PHP_MONGO_COLLECTION_DELETEINDEX     => 'MongoCollection::deleteIndex',
        self::PHP_MONGO_COLLECTION_DELETEINDEXES   => 'MongoCollection::deleteIndexes',
        self::PHP_MONGO_COLLECTION_DISTINCT        => 'MongoCollection::distinct',
        self::PHP_MONGO_COLLECTION_DROP            => 'MongoCollection::drop',
        self::PHP_MONGO_COLLECTION_ENSUREINDEX     => 'MongoCollection::ensureIndex',
        self::PHP_MONGO_COLLECTION_FIND            => 'MongoCollection::find',
        self::PHP_MONGO_COLLECTION_FINDANDMODIFY   => 'MongoCollection::findAndModify',
        self::PHP_MONGO_COLLECTION_FINDONE         => 'MongoCollection::findOne',
        self::PHP_MONGO_COLLECTION_GETDBREF        => 'MongoCollection::getDBRef',
        self::PHP_MONGO_COLLECTION_GETINDEXINFO    => 'MongoCollection::getIndexInfo',
        self::PHP_MONGO_COLLECTION_CREATEDBREF     => 'MongoCollection::createDBRef',
        self::PHP_MONGO_COLLECTION_GROUP           => 'MongoCollection::group',
        self::PHP_MONGO_COLLECTION_INSERT          => 'MongoCollection::insert',
        self::PHP_MONGO_COLLECTION_REMOVE          => 'MongoCollection::remove',
        self::PHP_MONGO_COLLECTION_SAVE            => 'MongoCollection::save',
        self::PHP_MONGO_COLLECTION_UPDATE          => 'MongoCollection::update',
        self::PHP_MONGO_MANAGER_CONSTRUCT          => 'Manager::__construct',
        self::PHP_MONGO_MANAGER_EXECUTEBULKWRITE   => 'Manager::executeBulkWrite',
        self::PHP_MONGO_MANAGER_EXECUTECOMMAND     => 'Manager::executeCommand',
        self::PHP_MONGO_MANAGER_EXECUTEQUERY       => 'Manager::executeQuery',
    ];

    public static $mongo_java = [];

    public static $mongo_python = [];

    public static $mongo_nodejs = [
        self::NODEJS_MONGO_COLLECTION_AGGREGATE                 => 'Collection::aggregate',
        self::NODEJS_MONGO_COLLECTION_BULKWRITE                 => 'Collection::bulkWrite',
        self::NODEJS_MONGO_COLLECTION_COUNT                     => 'Collection::count',
        self::NODEJS_MONGO_COLLECTION_CREATEINDEX               => 'Collection::createIndex',
        self::NODEJS_MONGO_COLLECTION_CREATEINDEXES             => 'Collection::createIndexes',
        self::NODEJS_MONGO_COLLECTION_DELETEMANY                => 'Collection::deleteMany',
        self::NODEJS_MONGO_COLLECTION_DELETEONE                 => 'Collection::deleteOne',
        self::NODEJS_MONGO_COLLECTION_DISTINCT                  => 'Collection::distinct',
        self::NODEJS_MONGO_COLLECTION_DROP                      => 'Collection::drop',
        self::NODEJS_MONGO_COLLECTION_DROPALLINDEXES            => 'Collection::dropAllIndexes',
        self::NODEJS_MONGO_COLLECTION_DROPINDEX                 => 'Collection::dropIndex',
        self::NODEJS_MONGO_COLLECTION_DROPINDEXES               => 'Collection::dropIndexes',
        self::NODEJS_MONGO_COLLECTION_ENSUREINDEX               => 'Collection::ensureIndex',
        self::NODEJS_MONGO_COLLECTION_FIND                      => 'Collection::find',
        self::NODEJS_MONGO_COLLECTION_FINDANDMODIFY             => 'Collection::findAndModify',
        self::NODEJS_MONGO_COLLECTION_FINDANDREMOVE             => 'Collection::findAndRemove',
        self::NODEJS_MONGO_COLLECTION_FINDONE                   => 'Collection::findOne',
        self::NODEJS_MONGO_COLLECTION_FINDONEANDDELETE          => 'Collection::findOneAndDelete',
        self::NODEJS_MONGO_COLLECTION_FINDONEANDREPLACE         => 'Collection::findOneAndReplace',
        self::NODEJS_MONGO_COLLECTION_FINDONEANDUPDATE          => 'Collection::findOneAndUpdate',
        self::NODEJS_MONGO_COLLECTION_GEOHAYSTACKSEARCH         => 'Collection::geoHaystackSearch',
        self::NODEJS_MONGO_COLLECTION_GEONEAR                   => 'Collection::geoNear',
        self::NODEJS_MONGO_COLLECTION_GROUP                     => 'Collection::group',
        self::NODEJS_MONGO_COLLECTION_INDEXES                   => 'Collection::indexes',
        self::NODEJS_MONGO_COLLECTION_INDEXEXISTS               => 'Collection::indexExists',
        self::NODEJS_MONGO_COLLECTION_INDEXINFORMATION          => 'Collection::indexInformation',
        self::NODEJS_MONGO_COLLECTION_INITIALIZEORDEREDBULKOP   => 'Collection::initializeOrderedBulkOp',
        self::NODEJS_MONGO_COLLECTION_INITIALIZEUNORDEREDBULKOP => 'Collection::initializeUnorderedBulkOp',
        self::NODEJS_MONGO_COLLECTION_INSERT                    => 'Collection::insert',
        self::NODEJS_MONGO_COLLECTION_INSERTMANY                => 'Collection::insertMany',
        self::NODEJS_MONGO_COLLECTION_INSERTONE                 => 'Collection::insertOne',
        self::NODEJS_MONGO_COLLECTION_ISCAPPED                  => 'Collection::isCapped',
        self::NODEJS_MONGO_COLLECTION_LISTINDEXES               => 'Collection::listIndexes',
        self::NODEJS_MONGO_COLLECTION_MAPREDUCE                 => 'Collection::mapReduce',
        self::NODEJS_MONGO_COLLECTION_OPTIONS                   => 'Collection::options',
        self::NODEJS_MONGO_COLLECTION_PARALLELCOLLECTIONSCAN    => 'Collection::parallelCollectionScan',
        self::NODEJS_MONGO_COLLECTION_REINDEX                   => 'Collection::reIndex',
        self::NODEJS_MONGO_COLLECTION_REMOVE                    => 'Collection::remove',
        self::NODEJS_MONGO_COLLECTION_RENAME                    => 'Collection::rename',
        self::NODEJS_MONGO_COLLECTION_REPLACEONE                => 'Collection::replaceOne',
        self::NODEJS_MONGO_COLLECTION_SAVE                      => 'Collection::save',
        self::NODEJS_MONGO_COLLECTION_STATS                     => 'Collection::stats',
        self::NODEJS_MONGO_COLLECTION_UPDATE                    => 'Collection::update',
        self::NODEJS_MONGO_COLLECTION_UPDATEMANY                => 'Collection::updateMany',
        self::NODEJS_MONGO_COLLECTION_UPDATEONE                 => 'Collection::updateOne',
        self::NODEJS_MONGO_DB_ADDUSER                           => 'DB::addUser',
        self::NODEJS_MONGO_DB_ADMIN                             => 'DB::admin',
        self::NODEJS_MONGO_DB_AUTHENTICATE                      => 'DB::authenticate',
        self::NODEJS_MONGO_DB_CLOSE                             => 'DB::close',
        self::NODEJS_MONGO_DB_COLLECTION                        => 'DB::collection',
        self::NODEJS_MONGO_DB_COLLECTIONS                       => 'DB::collections',
        self::NODEJS_MONGO_DB_COMMAND                           => 'DB::command',
        self::NODEJS_MONGO_DB_CREATECOLLECTION                  => 'DB::createCollection',
        self::NODEJS_MONGO_DB_CREATEINDEX                       => 'DB::createIndex',
        self::NODEJS_MONGO_DB_DB                                => 'DB::db',
        self::NODEJS_MONGO_DB_DROPCOLLECTION                    => 'DB::dropCollection',
        self::NODEJS_MONGO_DB_DROPDATABASE                      => 'DB::dropDatabase',
        self::NODEJS_MONGO_DB_ENSUREINDEX                       => 'DB::ensureIndex',
        self::NODEJS_MONGO_DB_EVAL                              => 'DB::eval',
        self::NODEJS_MONGO_DB_EXECUTEDBADMINCOMMAND             => 'DB::executeDbAdminCommand',
        self::NODEJS_MONGO_DB_INDEXINFORMATION                  => 'DB::indexInformation',
        self::NODEJS_MONGO_DB_LISTCOLLECTIONS                   => 'DB::listCollections',
        self::NODEJS_MONGO_DB_LOGOUT                            => 'DB::logout',
        self::NODEJS_MONGO_DB_OPEN                              => 'DB::open',
        self::NODEJS_MONGO_DB_REMOVEUSER                        => 'DB::removeUser',
        self::NODEJS_MONGO_DB_RENAMECOLLECTION                  => 'DB::renameCollection',
        self::NODEJS_MONGO_DB_STATS                             => 'DB::stats',
        self::NODEJS_MONGO_DB_UNREF                             => 'DB::unref',
    ];

    public static $common_redis = [
        self::REDIS_GET              => 'GET',
        self::REDIS_SET              => 'SET',
        self::REDIS_DELETE           => 'DELETE',
        self::CLUSTER_REDIS          => 'CLUSTER',
        self::GET_REDIS              => 'GET',
        self::DEL_REDIS              => 'DEL',
        self::SET_REDIS              => 'SET',
        self::DELETE_REDIS           => 'DELETE',
        self::DROP_REDIS             => 'DROP',
        self::QUIT_REDIS             => 'QUIT',
        self::APPEND_REDIS           => 'APPEND',
        self::BITCOUNT_REDIS         => 'BITCOUNT',
        self::BITOP_REDIS            => 'BITOP',
        self::DECR_REDIS             => 'DECR',
        self::DECRBY_REDIS           => 'DECRBY',
        self::GETBIT_REDIS           => 'GETBIT',
        self::GETRANGE_REDIS         => 'GETRANGE',
        self::GETSET_REDIS           => 'GETSET',
        self::INCR_REDIS             => 'INCR',
        self::INCRBY_REDIS           => 'INCRBY',
        self::INCRBYFLOAT_REDIS      => 'INCRBYFLOAT',
        self::MGET_REDIS             => 'MGET',
        self::MSET_REDIS             => 'MSET',
        self::MSETNX_REDIS           => 'MSETNX',
        self::PSETEX_REDIS           => 'PSETEX',
        self::SETBIT_REDIS           => 'SETBIT',
        self::SETEX_REDIS            => 'SETEX',
        self::SETNX_REDIS            => 'SETNX',
        self::SETRANGE_REDIS         => 'SETRANGE',
        self::STRLEN_REDIS           => 'STRLEN',
        self::HDEL_REDIS             => 'HDEL',
        self::HEXISTS_REDIS          => 'HEXISTS',
        self::HGET_REDIS             => 'HGET',
        self::HGETALL_REDIS          => 'HGETALL',
        self::HINCRBY_REDIS          => 'HINCRBY',
        self::HINCRBYFLOAT_REDIS     => 'HINCRBYFLOAT',
        self::HKEYS_REDIS            => 'HKEYS',
        self::HLEN_REDIS             => 'HLEN',
        self::HMGET_REDIS            => 'HMGET',
        self::HMSET_REDIS            => 'HMSET',
        self::HSET_REDIS             => 'HSET',
        self::HSETNX_REDIS           => 'HSETNX',
        self::HVALS_REDIS            => 'HVALS',
        self::HSCAN_REDIS            => 'HSCAN',
        self::BLPOP_REDIS            => 'BLPOP',
        self::BRPOP_REDIS            => 'BRPOP',
        self::BRPOPLPUSH             => 'BRPO',
        self::LINDEX_REDIS           => 'LINDEX',
        self::LINSERT_REDIS          => 'LINSERT',
        self::LLEN_REDIS             => 'LLEN',
        self::LPOP_REDIS             => 'LPOP',
        self::LPUSH_REDIS            => 'LPUSH',
        self::LPUSHX_REDIS           => 'LPUSHX',
        self::LRANGE_REDIS           => 'LRANGE',
        self::LREM_REDIS             => 'LREM',
        self::LSET_REDIS             => 'LSET',
        self::LTRIM_REDIS            => 'LTRIM',
        self::RPOP_REDIS             => 'RPOP',
        self::RPOPLPUSH_REDIS        => 'RPOPLPUSH',
        self::RPUSH_REDIS            => 'RPUSH',
        self::RPUSHX_REDIS           => 'RPUSHX',
        self::SADD_REDIS             => 'SADD',
        self::SCARD_REDIS            => 'SCARD',
        self::SDIFF_REDIS            => 'SDIFF',
        self::SDIFFSTORE_REDIS       => 'SDIFFSTORE',
        self::SINTER_REDIS           => 'SINTER',
        self::SINTERSTORE_REDIS      => 'SINTERSTORE',
        self::SISMEMBER_REDIS        => 'SISMEMBER',
        self::SMEMBERS_REDIS         => 'SMEMBERS',
        self::SMOVE_REDIS            => 'SMOVE',
        self::SPOP_REDIS             => 'SPOP',
        self::SRANDMEMBER_REDIS      => 'SRANDMEMBER',
        self::SREM_REDIS             => 'SREM',
        self::SUNION_REDIS           => 'SUNION',
        self::SUNIONSTORE_REDIS      => 'SUNIONSTORE',
        self::SSCAN_REDIS            => 'SSCAN',
        self::ZADD_REDIS             => 'ZADD',
        self::ZCARD_REDIS            => 'ZCARD',
        self::ZCOUNT_REDIS           => 'ZCOUNT',
        self::ZINCRBY_REDIS          => 'ZINCRBY',
        self::ZRANGE_REDIS           => 'ZRANGE',
        self::ZRANGEBYSCORE_REDIS    => 'ZRANGEBYSCORE',
        self::ZRANK_REDIS            => 'ZRANK',
        self::ZREM_REDIS             => 'ZREM',
        self::ZREMRANGEBYRANK_REDIS  => 'ZREMRANGEBYRANK',
        self::ZREMRANGEBYSCORE_REDIS => 'ZREMRANGEBYSCORE',
        self::ZREVRANGE_REDIS        => 'ZREVRANGE',
        self::ZREVRANGEBYSCORE_REDIS => 'ZREVRANGEBYSCORE',
        self::ZREVRANK_REDIS         => 'ZREVRANK',
        self::ZSCORE_REDIS           => 'ZSCORE',
        self::ZUNIONSTORE_REDIS      => 'ZUNIONSTORE',
        self::ZINTERSTORE_REDIS      => 'ZINTERSTORE',
        self::ZSCAN_REDIS            => 'ZSCAN',
        self::PSUBSCRIBE_REDIS       => 'PSUBSCRIBE',
        self::PUBLISH_REDIS          => 'PUBLISH',
        self::PUBSUB_REDIS           => 'PUBSUB',
        self::PUNSUBSCRIBE_REDIS     => 'PUNSUBSCRIBE',
        self::SUBSCRIBE_REDIS        => 'SUBSCRIBE',
        self::UNSUBSCRIBE_REDIS      => 'UNSUBSCRIBE',
        self::DISCARD_REDIS          => 'DISCARD',
        self::EXEC_REDIS             => 'EXEC',
        self::MULTI_REDIS            => 'MULTI',
        self::UNWATCH_REDIS          => 'UNWATCH',
        self::WATCH_REDIS            => 'WATCH',
        self::EVAL_REDIS             => 'EVAL',
        self::EVALSHA_REDIS          => 'EVALSHA',
        self::DUMP_REDIS             => 'DUMP',
        self::EXPIRE_REDIS           => 'EXPIRE',
        self::EXPIREAT_REDIS         => 'EXPIREAT',
        self::KEYS_REDIS             => 'KEYS',
        self::MIGRATE_REDIS          => 'MIGRATE',
        self::MOVE_REDIS             => 'MOVE',
        self::OBJECT_REDIS           => 'OBJECT',
        self::PERSIST_REDIS          => 'PERSIST',
        self::PEXPIREAT_REDIS        => 'PEXPIREAT',
        self::PTTL_REDIS             => 'PTTL',
        self::RANDOMKEY_REDIS        => 'RANDOMKEY',
        self::RENAME_REDIS           => 'RENAME',
        self::RENAMENX_REDIS         => 'RENAMENX',
        self::RESTORE_REDIS          => 'RESTORE',
        self::SORT_REDIS             => 'SORT',
        self::TTL_REDIS              => 'TTL',
        self::TYPE_REDIS             => 'TYPE',
        self::EXISTS_REDIS           => 'EXISTS',
        self::CLIENT_SETNAME_REDIS   => 'CLIENT_SETNAME',//REDIS新增命令
        self::TIME_REDIS             => 'TIME',
        self::SYNC_REDIS             => 'SYNC',
        self::PEXPIRE_REDIS          => 'PEXPIRE',
        self::SCAN_REDIS             => 'SCAN',
        self::SLOWLOG_REDIS          => 'SLOWLOG',
        self::SCRIPT_EXISTS_REDIS    => 'SCRIPT_EXISTS',
        self::SCRIPT_FLUSH_REDIS     => 'SCRIPT_FLUSH',
        self::SCRIPT_KILL_REDIS      => 'SCRIPT_KILL',
        self::SCRIPT_LOAD_REDIS      => 'SCRIPT_LOAD',
        self::AUTH_REDIS             => 'AUTH',
        self::ECHO_REDIS             => 'ECHO',
        self::PING_REDIS             => 'PING',
        self::SELECT_REDIS           => 'SELECT',
        self::BGREWRITEAOF_REDIS     => 'BGREWRITEAOF',
        self::BGSAVE_REDIS           => 'BGSAVE',
        self::CLIENT_GETNAME_REDIS   => 'CLIENT_GETNAME',
        self::CLIENT_KILL_REDIS      => 'CLIENT_KILL',
        self::CLIENT_LIST_REDIS      => 'CLIENT_LIST',
        self::CONFIG_GET_REDIS       => 'CONFIG_GET',
        self::CONFIG_RESETSTAT_REDIS => 'CONFIG_RESETSTAT',
        self::CONFIG_REWRITE_REDIS   => 'CONFIG_REWRITE',
        self::CONFIG_SET_REDIS       => 'CONFIG_SET',
        self::DBSIZE_REDIS           => 'DBSIZE',
        self::DEBUG_OBJECT_REDIS     => 'DEBUG_OBJECT',
        self::DEBUG_SEGFAULT_REDIS   => 'DEBUG_SEGFAULT',
        self::FLUSHALL_REDIS         => 'FLUSHALL',
        self::FLUSHDB_REDIS          => 'FLUSHDB',
        self::INFO_REDIS             => 'INFO',
        self::LASTSAVE_REDIS         => 'LASTSAVE',
        self::MONITOR_REDIS          => 'MONITOR',
        self::PSYNC_REDIS            => 'PSYNC',
        self::SAVE_REDIS             => 'SAVE',
        self::SHUTDOWN_REDIS         => 'SHUTDOWN',
        self::SLAVEOF_REDIS          => 'SLAVEOF',
    ];

    public static $php_redis = [
        self::PHP_REDIS_DEL => 'DEL',

        self::PHP_REDIS_DUMP => 'DUMP',

        self::PHP_REDIS_EXISTS => 'EXISTS',

        self::PHP_REDIS_EXPIRE => 'EXPIRE',

        self::PHP_REDIS_EXPIREAT => 'EXPIREAT',

        self::PHP_REDIS_KEYS => 'KEYS',

        self::PHP_REDIS_MOVE => 'MOVE',

        self::PHP_REDIS_OBJECT => 'OBJECT',

        self::PHP_REDIS_PERSIST => 'PERSIST',

        self::PHP_REDIS_PEXPIRE => 'PEXPIRE',

        self::PHP_REDIS_PEXPIREAT => 'PEXPIREAT',

        self::PHP_REDIS_PTTL => 'PTTL',

        self::PHP_REDIS_RANDOMKEY => 'RANDOMKEY',

        self::PHP_REDIS_RENAME => 'RENAME',

        self::PHP_REDIS_RENAMENX => 'RENAMENX',

        self::PHP_REDIS_SCAN => 'SCAN',

        self::PHP_REDIS_SORT => 'SORT',

        self::PHP_REDIS_TTL => 'TTL',

        self::PHP_REDIS_TYPE => 'TYPE',

        self::PHP_REDIS_APPEND => 'APPEND',

        self::PHP_REDIS_BITCOUNT => 'BITCOUNT',

        self::PHP_REDIS_BITOP => 'BITOP',

        self::PHP_REDIS_BITFIELD => 'BITFIELD',

        self::PHP_REDIS_DECR => 'DECR',

        self::PHP_REDIS_DECRBY => 'DECRBY',

        self::PHP_REDIS_GET => 'GET',

        self::PHP_REDIS_GETBIT => 'GETBIT',

        self::PHP_REDIS_GETRANGE => 'GETRANGE',

        self::PHP_REDIS_GETSET => 'GETSET',

        self::PHP_REDIS_INCR => 'INCR',

        self::PHP_REDIS_INCRBY => 'INCRBY',

        self::PHP_REDIS_INCRBYFLOAT => 'INCRBYFLOAT',

        self::PHP_REDIS_MGET => 'MGET',

        self::PHP_REDIS_MSET => 'MSET',

        self::PHP_REDIS_MSETNX => 'MSETNX',

        self::PHP_REDIS_PSETEX => 'PSETEX',

        self::PHP_REDIS_SET => 'SET',

        self::PHP_REDIS_SETBIT => 'SETBIT',

        self::PHP_REDIS_SETEX => 'SETEX',

        self::PHP_REDIS_SETNX => 'SETNX',

        self::PHP_REDIS_SETRANGE => 'SETRANGE',

        self::PHP_REDIS_STRLEN => 'STRLEN',

        self::PHP_REDIS_HDEL => 'HDEL',

        self::PHP_REDIS_HEXISTS => 'HEXISTS',

        self::PHP_REDIS_HGET => 'HGET',

        self::PHP_REDIS_HGETALL => 'HGETALL',

        self::PHP_REDIS_HINCRBY => 'HINCRBY',

        self::PHP_REDIS_HINCRBYFLOAT => 'HINCRBYFLOAT',

        self::PHP_REDIS_HKEYS => 'HKEYS',

        self::PHP_REDIS_HLEN => 'HLEN',

        self::PHP_REDIS_HMGET => 'HMGET',

        self::PHP_REDIS_HMSET => 'HMSET',

        self::PHP_REDIS_HSCAN => 'HSCAN',

        self::PHP_REDIS_HSET => 'HSET',

        self::PHP_REDIS_HSETNX => 'HSETNX',

        self::PHP_REDIS_HVALS => 'HVALS',

        self::PHP_REDIS_HSTRLEN => 'HSTRLEN',

        self::PHP_REDIS_BLPOP => 'BLPOP',

        self::PHP_REDIS_BRPOP => 'BRPOP',

        self::PHP_REDIS_BRPOPLPUSH => 'BRPOPLPUSH',

        self::PHP_REDIS_LINDEX => 'LINDEX',

        self::PHP_REDIS_LINSERT => 'LINSERT',

        self::PHP_REDIS_LLEN => 'LLEN',

        self::PHP_REDIS_LPOP => 'LPOP',

        self::PHP_REDIS_LPUSH => 'LPUSH',

        self::PHP_REDIS_LPUSHX => 'LPUSHX',

        self::PHP_REDIS_LRANGE => 'LRANGE',

        self::PHP_REDIS_LREM => 'LREM',

        self::PHP_REDIS_LSET => 'LSET',

        self::PHP_REDIS_LTRIM => 'LTRIM',

        self::PHP_REDIS_RPOP => 'RPOP',

        self::PHP_REDIS_RPOPLPUSH => 'RPOPLPUSH',

        self::PHP_REDIS_RPUSH => 'RPUSH',

        self::PHP_REDIS_RPUSHX => 'RPUSHX',

        self::PHP_REDIS_SADD => 'SADD',

        self::PHP_REDIS_SCARD => 'SCARD',

        self::PHP_REDIS_SDIFF => 'SDIFF',

        self::PHP_REDIS_SDIFFSTORE => 'SDIFFSTORE',

        self::PHP_REDIS_SINTER => 'SINTER',

        self::PHP_REDIS_SINTERSTORE => 'SINTERSTORE',

        self::PHP_REDIS_SISMEMBER => 'SISMEMBER',

        self::PHP_REDIS_SMEMBERS => 'SMEMBERS',

        self::PHP_REDIS_SMOVE => 'SMOVE',

        self::PHP_REDIS_SPOP => 'SPOP',

        self::PHP_REDIS_SRANDMEMBER => 'SRANDMEMBER',

        self::PHP_REDIS_SREM => 'SREM',

        self::PHP_REDIS_SSCAN => 'SSCAN',

        self::PHP_REDIS_SUNION => 'SUNION',

        self::PHP_REDIS_SUNIONSTORE => 'SUNIONSTORE',

        self::PHP_REDIS_ZADD => 'ZADD',

        self::PHP_REDIS_ZCARD => 'ZCARD',

        self::PHP_REDIS_ZCOUNT => 'ZCOUNT',

        self::PHP_REDIS_ZINCRBY => 'ZINCRBY',

        self::PHP_REDIS_ZINTERSTORE => 'ZINTERSTORE',

        self::PHP_REDIS_ZRANGE => 'ZRANGE',

        self::PHP_REDIS_ZRANGEBYSCORE => 'ZRANGEBYSCORE',

        self::PHP_REDIS_ZRANK => 'ZRANK',

        self::PHP_REDIS_ZREM => 'ZREM',

        self::PHP_REDIS_ZREMRANGEBYRANK => 'ZREMRANGEBYRANK',

        self::PHP_REDIS_ZREMRANGEBYSCORE => 'ZREMRANGEBYSCORE',

        self::PHP_REDIS_ZREVRANGE => 'ZREVRANGE',

        self::PHP_REDIS_ZREVRANGEBYSCORE => 'ZREVRANGEBYSCORE',

        self::PHP_REDIS_ZREVRANK => 'ZREVRANK',

        self::PHP_REDIS_ZUNIONSTORE => 'ZUNIONSTORE',

        self::PHP_REDIS_ZSCORE => 'ZSCORE',

        self::PHP_REDIS_ZSCAN => 'ZSCAN',

        self::PHP_REDIS_ZRANGEBYLEX => 'ZRANGEBYLEX',

        self::PHP_REDIS_ZREVRANGEBYLEX => 'ZREVRANGEBYLEX',

        self::PHP_REDIS_ZREMRANGEBYLEX => 'ZREMRANGEBYLEX',

        self::PHP_REDIS_ZLEXCOUNT => 'ZLEXCOUNT',

        self::PHP_REDIS_PFADD => 'PFADD',

        self::PHP_REDIS_PFMERGE => 'PFMERGE',

        self::PHP_REDIS_PFCOUNT => 'PFCOUNT',

        self::PHP_REDIS_PUBSUB => 'PUBSUB',

        self::PHP_REDIS_PUBLISH => 'PUBLISH',

        self::PHP_REDIS_DISCARD => 'DISCARD',

        self::PHP_REDIS_EXEC => 'EXEC',

        self::PHP_REDIS_MULTI => 'MULTI',

        self::PHP_REDIS_UNWATCH => 'UNWATCH',

        self::PHP_REDIS_WATCH => 'WATCH',

        self::PHP_REDIS_EVAL => 'EVAL',

        self::PHP_REDIS_EVALSHA => 'EVALSHA',

        self::PHP_REDIS_SCRIPT => 'SCRIPT',

        self::PHP_REDIS_AUTH => 'AUTH',

        self::PHP_REDIS_ECHO => 'ECHO',

        self::PHP_REDIS_PING => 'PING',

        self::PHP_REDIS_SELECT => 'SELECT',

        self::PHP_REDIS_BGREWRITEAOF => 'BGREWRITEAOF',

        self::PHP_REDIS_BGSAVE => 'BGSAVE',

        self::PHP_REDIS_CLIENT => 'CLIENT',

        self::PHP_REDIS_CONFIG => 'CONFIG',

        self::PHP_REDIS_DBSIZE => 'DBSIZE',

        self::PHP_REDIS_FLUSHALL => 'FLUSHALL',

        self::PHP_REDIS_FLUSHDB => 'FLUSHDB',

        self::PHP_REDIS_INFO => 'INFO',

        self::PHP_REDIS_LASTSAVE => 'LASTSAVE',

        self::PHP_REDIS_SAVE => 'SAVE',

        self::PHP_REDIS_SLAVEOF => 'SLAVEOF',

        self::PHP_REDIS_SLOWLOG => 'SLOWLOG',

        self::PHP_REDIS_TIME => 'TIME',

        self::PHP_REDIS_COMMAND => 'COMMAND',

        self::PHP_REDIS_GEOADD => 'GEOADD',

        self::PHP_REDIS_GEOHASH => 'GEOHASH',

        self::PHP_REDIS_GEOPOS => 'GEOPOS',

        self::PHP_REDIS_GEODIST => 'GEODIST',

        self::PHP_REDIS_GEORADIUS => 'GEORADIUS',

        self::PHP_REDIS_GEORADIUSBYMEMBER => 'GEORADIUSBYMEMBER',

    ];

    /**
     * 公共memcache方法
     *
     * @var array
     */
    public static $common_memcache = [
        self::MEMCACHE_GET        => 'GET',
        self::MEMCACHE_SET        => 'SET',
        self::MEMCACHE_DELETE     => 'DELETE',
        self::NOOP_MEMCACHE       => 'NOOP',
        self::STATS_MEMCACHE      => 'STATS',
        self::FLUSH_ALL_MEMCACHE  => 'FLUSH_ALL',
        self::GET_ONE_MEMCACHE    => 'GET_ONE',
        self::GET_MANY_MEMCACHE   => 'GET_MANY',
        self::SET_MEMCACHE        => 'SET',
        self::REPLACE_MEMCACHE    => 'REPLACE',
        self::ADD_MEMCACHE        => 'ADD',
        self::EXCEPTION_MEMCACHE  => 'EXCEPTION',
        self::DELETE_MEMCACHE     => 'DELETE',
        self::VERSION_MEMCACHE    => 'VERSION',
        self::QUIT_MEMCACHE       => 'QUIT',
        self::INCR_MEMCACHE       => 'INCR',
        self::DECR_MEMCACHE       => 'DECR',
        self::GETS_ONE_MEMCACHE   => 'GETS_ONE',
        self::GETS_MANY_MEMCACHE  => 'GETS_MANY',
        self::CAS_MEMCACHE        => 'CAS',
        self::PREPEND_MEMCACHE    => 'PREPEND',
        self::GET_HIT_MEMCACHE    => 'GET_HIT',
        self::GET_MISS_MEMCACHE   => 'GET_MISS',
        self::VERBOSITY_MEMCACHE  => 'VERBOSITY',
        self::AUTH_LIST_MEMCACHE  => 'AUTH_LIST',
        self::AUTH_START_MEMCACHE => 'AUTH_START',
        self::AUTH_STEP_MEMCACHE  => 'AUTH_STEP',
        self::APPEND_MEMCACHE     => 'APPEND',
        self::TOUCH_MEMCACHE      => 'TOUCH',
        self::GAT_MEMCACHE        => 'GAT',
        self::GATQ_MEMCACHE       => 'GATQ',
        self::SET_MANY_MEMCACHE   => 'SET_MANY',
    ];

    public static $node_memcache = [

    ];

    public static $node_memcached = [
        self::NODEJS_MEMCACHED_GET      => 'GET',
        self::NODEJS_MEMCACHED_SET      => 'SET',
        self::NODEJS_MEMCACHED_REPLACE  => 'REPLACE',
        self::NODEJS_MEMCACHED_GETS     => 'GETS',
        self::NODEJS_MEMCACHED_ADD      => 'ADD',
        self::NODEJS_MEMCACHED_TOUCH    => 'TOUCH',
        self::NODEJS_MEMCACHED_DEL      => 'DEL',
        self::NODEJS_MEMCACHED_APPEND   => 'APPEND',
        self::NODEJS_MEMCACHED_GETMULTI => 'GETMULTI',
        self::NODEJS_MEMCACHED_PREPREND => 'PREPREND',
        self::NODEJS_MEMCACHED_INCR     => 'INCR',
        self::NODEJS_MEMCACHED_DECR     => 'DECR',
    ];

    public static $python_memcache = [];

    public static $dotnet_memcache = [
        self::DOTNET_MEMCACHE_STORECOUNTER         => 'StoreCounter',
        self::DOTNET_MEMCACHE_INCREMENT            => 'Increment',
        self::DOTNET_MEMCACHE_DECREMENT            => 'Decrement',
        self::DOTNET_MEMCACHE_GETCOUNTER           => 'GetCounter',
        self::DOTNET_MEMCACHE_KEYEXISTS            => 'KeyExists',
        self::DOTNET_MEMCACHE_GETEXPIRATIONTIME    => 'GetExpirationTime',
        self::DOTNET_MEMCACHE_INCREMENTORDECREMENT => 'IncrementOrDecrement',
        self::DOTNET_MEMCACHE_GETMULTIPLEARRAY     => 'GetMultipleArray',
        self::DOTNET_MEMCACHE_GETMULTIPLE          => 'GetMultiple',
        self::DOTNET_MEMCACHE_LOADITEMS            => 'LoadItems',
        self::DOTNET_MEMCACHE_GET                  => 'Get',
        self::DOTNET_MEMCACHE_GETS                 => 'Gets',
    ];

    public static $java_memcache = [
        self::JAVA_MEMCACHE_GET_TOUCH           => 'GET_TOUCH',
        self::JAVA_MEMCACHE_GETL                => 'GETL',
        self::JAVA_MEMCACHE_REPLACE_GET         => 'REPLACE_GET',
        self::JAVA_MEMCACHE_MULTI_GET           => 'MULTI_GET',
        self::JAVA_MEMCACHE_ASYNC_CAS           => 'ASYNC_CAS',
        self::JAVA_MEMCACHE_ASYNC_GET           => 'ASYNC_GET',
        self::JAVA_MEMCACHE_GET_AND_TOUCH       => 'GET_AND_TOUCH',
        self::JAVA_MEMCACHE_ASYNC_GET_BULK      => 'ASYNC_GET_BULK',
        self::JAVA_MEMCACHE_ASYNC_GET_AND_TOUCH => 'ASYNC_GET_AND_TOUCH',
        self::JAVA_MEMCACHE_GET_BULK            => 'GET_BULK',
        self::JAVA_MEMCACHE_ASYNC_INCR          => 'ASYNC_INCR',
        self::JAVA_MEMCACHE_ASYNC_DECR          => 'ASYNC_DECR',
        self::JAVA_MEMCACHE_ADD_OR_INCR         => 'ADD_OR_INCR',
        self::JAVA_MEMCACHE_ADD_OR_DECR         => 'ADD_OR_DECR',
        self::DOTNET_MEMCACHE_GET               => 'Get',
        self::DOTNET_MEMCACHE_GETS              => 'Gets',
    ];

    public static $php_memcache = [
        self::PHP_MEMCACHE_ADD                    => 'add',
        self::PHP_MEMCACHE_ADD_SERVER             => 'addServer',
        self::PHP_MEMCACHE_CLOSE                  => 'close',
        self::PHP_MEMCACHE_CONNECT                => 'connect',
        self::PHP_MEMCACHE_DECREMENT              => 'decrement',
        self::PHP_MEMCACHE_DELETE                 => 'delete',
        self::PHP_MEMCACHE_FLUSH                  => 'flush',
        self::PHP_MEMCACHE_GET                    => 'get',
        self::PHP_MEMCACHE_GET_EXTENDED_STATS     => 'getExtendedStats',
        self::PHP_MEMCACHE_GET_SERVER_STATUS      => 'getServerStatus',
        self::PHP_MEMCACHE_GET_STATS              => 'getStats',
        self::PHP_MEMCACHE_GET_VERSION            => 'getVersion',
        self::PHP_MEMCACHE_INCREMENT              => 'increment',
        self::PHP_MEMCACHE_PCONNECT               => 'pconnect',
        self::PHP_MEMCACHE_REPLACE                => 'replace',
        self::PHP_MEMCACHE_SET                    => 'set',
        self::PHP_MEMCACHE_SET_COMPRESS_THRESHOLD => 'setCompressThreshold',
        self::PHP_MEMCACHE_SET_SERVER_PARAMS      => 'setServerParams',
    ];

    public static $php_memcached = [
        self::PHP_MEMCACHED_ADD                 => 'add',
        self::PHP_MEMCACHED_ADD_BY_KEY          => 'addByKey',
        self::PHP_MEMCACHED_ADD_SERVER          => 'addServer',
        self::PHP_MEMCACHED_ADD_SERVERS         => 'addServers',
        self::PHP_MEMCACHED_APPEND              => 'append',
        self::PHP_MEMCACHED_APPEND_BY_KEY       => 'appendByKey',
        self::PHP_MEMCACHED_CAS                 => 'cas',
        self::PHP_MEMCACHED_CAS_BYK_EY          => 'casByKey',
        self::PHP_MEMCACHED_CONSTRUCT           => 'construct',
        self::PHP_MEMCACHED_DECREMENT           => 'decrement',
        self::PHP_MEMCACHED_DECREMENT_BY_KEY    => 'decrementByKey',
        self::PHP_MEMCACHED_DELETE              => 'delete',
        self::PHP_MEMCACHED_DELETE_BY_KEY       => 'deleteByKey',
        self::PHP_MEMCACHED_DELETE_MULTI        => 'deleteMulti',
        self::PHP_MEMCACHED_DELETE_MULTI_BY_KEY => 'deleteMultiByKey',
        self::PHP_MEMCACHED_FETCH               => 'fetch',
        self::PHP_MEMCACHED_FETCH_ALL           => 'fetchAll',
        self::PHP_MEMCACHED_FLUSH               => 'flush',
        self::PHP_MEMCACHED_GET                 => 'get',
        self::PHP_MEMCACHED_GET_ALL_KEYS        => 'getAllKeys',
        self::PHP_MEMCACHED_GET_BY_KEY          => 'getByKey',
        self::PHP_MEMCACHED_GET_DELAYED         => 'getDelayed',
        self::PHP_MEMCACHED_GET_DELAYED_BY_KEY  => 'getDelayedByKey',
        self::PHP_MEMCACHED_GET_MULTI           => 'getMulti',
        self::PHP_MEMCACHED_GET_MULTI_BY_KEY    => 'getMultiByKey',
        self::PHP_MEMCACHED_GET_OPTION          => 'getOption',
        self::PHP_MEMCACHED_GET_RESULT_CODE     => 'getResultCode',
        self::PHP_MEMCACHED_GET_RESULT_MESSAGE  => 'getResultMessage',
        self::PHP_MEMCACHED_GET_SERVER_BY_KEY   => 'getServerByKey',
        self::PHP_MEMCACHED_GET_SERVER_LIST     => 'getServerList',
        self::PHP_MEMCACHED_GET_STATS           => 'getStats',
        self::PHP_MEMCACHED_GET_VERSION         => 'getVersion',
        self::PHP_MEMCACHED_INCREMENT           => 'increment',
        self::PHP_MEMCACHED_INCREMENT_BY_KEY    => 'incrementByKey',
        self::PHP_MEMCACHED_IS_PERSISTENT       => 'isPersistent',
        self::PHP_MEMCACHED_IS_PRISTINE         => 'isPristine',
        self::PHP_MEMCACHED_PREPEND             => 'prepend',
        self::PHP_MEMCACHED_PREPEND_BY_KEY      => 'prependByKey',
        self::PHP_MEMCACHED_QUIT                => 'quit',
        self::PHP_MEMCACHED_REPLACE             => 'replace',
        self::PHP_MEMCACHED_REPLACE_BY_KEY      => 'replaceByKey',
        self::PHP_MEMCACHED_RESET_SERVER_LIST   => 'resetServerList',
        self::PHP_MEMCACHED_SET                 => 'set',
        self::PHP_MEMCACHED_SET_BY_KEY          => 'setByKey',
        self::PHP_MEMCACHED_SET_MULTI           => 'setMulti',
        self::PHP_MEMCACHED_SET_MULTI_BY_KEY    => 'setMultiByKey',
        self::PHP_MEMCACHED_SET_OPTION          => 'setOption',
        self::PHP_MEMCACHED_SET_OPTIONS         => 'setOptions',
        self::PHP_MEMCACHED_SET_SASL_AUTH_DATA  => 'setSaslAuthData',
        self::PHP_MEMCACHED_TOUCH               => 'touch',
        self::PHP_MEMCACHED_TOUCH_BY_KEY        => 'touchByKey',
        self::PHP_MEMCACHED_EXCEPTION           => 'Exception',
    ];

    public static $resource_type = [
        self::IO_OPEN,
        self::CURL,
        self::SOAP,
        self::MYSQL_CONNECT_OPEN,
        self::MYSQL_CONNECT_CLOSE,
        self::MYSQL_QUERY,
        self::MYSQL_OPT_INSERT,
        self::MYSQL_OPT_DELETE,
        self::MYSQL_OPT_UPDATE,
        self::MYSQL_OPT_SELECT,
        self::SQLSERVER_CONNECT_OPEN,
        self::SQLSERVER_CONNECT_CLOSE,
        self::SQLSERVER_QUERY,
        self::SQLSERVER_OPT_INSERT,
        self::SQLSERVER_OPT_DELETE,
        self::SQLSERVER_OPT_UPDATE,
        self::SQLSERVER_OPT_SELECT,
        self::ORACLE_CONNECT_OPEN,
        self::ORACLE_CONNECT_CLOSE,
        self::ORACLE_QUERY,
        self::ORACLE_OPT_INSERT,
        self::ORACLE_OPT_DELETE,
        self::ORACLE_OPT_UPDATE,
        self::ORACLE_OPT_SELECT,
        self::POSTGRESQL_CONNECT_OPEN,
        self::POSTGRESQL_CONNECT_CLOSE,
        self::POSTGRESQL_QUERY,
        self::POSTGRESQL_OPT_INSERT,
        self::POSTGRESQL_OPT_DELETE,
        self::POSTGRESQL_OPT_UPDATE,
        self::POSTGRESQL_OPT_SELECT,
        self::SYBASE_CONNECT_OPEN,
        self::SYBASE_CONNECT_CLOSE,
        self::SYBASE_QUERY,
        self::SYBASE_OPT_INSERT,
        self::SYBASE_OPT_DELETE,
        self::SYBASE_OPT_UPDATE,
        self::SYBASE_OPT_SELECT,
        self::DB2_CONNECT_OPEN,
        self::DB2_CONNECT_CLOSE,
        self::DB2_QUERY,
        self::DB2_OPT_INSERT,
        self::DB2_OPT_ELETE,
        self::DB2_OPT_PDATE,
        self::DB2_OPT_ELECT,
        self::ACCESS_CONNECT_OPEN,
        self::ACCESS_CONNECT_CLOSE,
        self::ACCESS_QUERY,
        self::SQLLITE_CONNECT_OPEN,
        self::SQLLITE_CONNECT_CLOSE,
        self::SQLLITE_QUERY,
        self::MEMCACHE_CONNECT_OPEN,
        self::MEMCACHE_CONNECT_CLOSE,
        self::MEMCACHE_SET,
        self::MEMCACHE_GET,
        self::MEMCACHE_DELETE,
        self::GET_ONE_MEMCACHE,
        self::GET_MANY_MEMCACHE,
        self::SET_MEMCACHE,
        self::REPLACE_MEMCACHE,
        self::ADD_MEMCACHE,
        self::EXCEPTION_MEMCACHE,
        self::DELETE_MEMCACHE,
        self::VERSION_MEMCACHE,
        self::QUIT_MEMCACHE,
        self::INCR_MEMCACHE,
        self::DECR_MEMCACHE,
        self::GETS_ONE_MEMCACHE,
        self::GETS_MANY_MEMCACHE,
        self::CAS_MEMCACHE,
        self::PREPEND_MEMCACHE,
        self::GET_HIT_MEMCACHE,
        self::GET_MISS_MEMCACHE,
        self::VERBOSITY_MEMCACHE,
        self::AUTH_LIST_MEMCACHE,
        self::AUTH_START_MEMCACHE,
        self::AUTH_STEP_MEMCACHE,
        self::APPEND_MEMCACHE,
        self::TOUCH_MEMCACHE,
        self::GAT_MEMCACHE,
        self::GATQ_MEMCACHE,
        self::SET_MANY_MEMCACHE,
        self::NOOP_MEMCACHE,
        self::STATS_MEMCACHE,
        self::FLUSH_ALL_MEMCACHE,
        self::REDIS_CONNECT_OPEN,
        self::REDIS_CONNECT_CLOSE,
        self::REDIS_SET,
        self::REDIS_GET,
        self::REDIS_DELETE,
        self::TOKYO_TYRANT_CONNECT_OPEN,
        self::TOKYO_TYRANT_CONNECT_CLOSE,
        self::FLARE_CONNECT_OPEN,
        self::FLARE_CONNECT_CLOSE,
        self::ROMA_CONNECT_OPEN,
        self::ROMA_CONNECT_CLOSE,
        self::MONGODB_CONNECT_OPEN,
        self::MONGODB_CONNECT_CLOSE,
        self::MONGODB_CONNETCT_QUERY,
        self::MONGODB_OPER_DELETE,
        self::MONGODB_OPER_SELECT,
        self::MONGODB_OPER_INDEXES,
        self::MONGODB_OPER_INDEXEXISTS,
        self::MONGODB_OPER_INDEXINFORMATION,
        self::MONGODB_OPER_INSERT,
        self::MONGODB_OPER_INSERTMANY,
        self::MONGODB_OPER_INSERTONE,
        self::MONGODB_OPER_DROP,
        self::MONGODB_OPER_DROPALLINDEXES,
        self::MONGODB_OPER_DROPINDEX,
        self::MONGODB_OPER_REMOVE,
        self::MONGODB_OPER_DELETEMANY,
        self::MONGODB_OPER_DELETEONE,
        self::MONGODB_OPER_UPDATE,
        self::MONGODB_OPER_UPDATEMANY,
        self::MONGODB_OPER_UPDATEONE,
        self::MONGODB_OPER_FINDONE,
        self::MONGODB_OPER_FINDANDMODIFY,
        self::MONGODB_OPER_FINDANDREMOVE,
        self::MONGODB_OPER_FINDONEANDDELETE,
        self::MONGODB_OPER_FINDONEANDREPLACE,
        self::MONGODB_OPER_FINDONEANDUPDATE,
        self::MONGODB_OPER_BULKWRITE,
        self::MONGODB_OPER_AGGREGATE,
        self::MONGODB_OPER_COUNT,
        self::MONGODB_OPER_CREATEINDEX,
        self::MONGODB_OPER_DISTINCT,
        self::MONGODB_OPER_ENSUREINDEX,
        self::MONGODB_OPER_GEOHAYSTACKSEARCH,
        self::MONGODB_OPER_GEONEAR,
        self::MONGODB_OPER_GROUP,
        self::MONGODB_OPER_ISCAPPED,
        self::MONGODB_OPER_MAPREDUCE,
        self::MONGODB_OPER_OPTIONS,
        self::MONGODB_OPER_PARALLELCOLLECTIONSCAN,
        self::MONGODB_OPER_REINDEX,
        self::MONGODB_OPER_RENAME,
        self::MONGODB_OPER_REPLACEONE,
        self::MONGODB_OPER_SAVE,
        self::MONGODB_OPER_STATS,
        self::MONGODB_OPER_findById,
        self::MONGODB_OPER_findByIdAndRemove,
        self::MONGODB_OPER_find,
        self::MONGODB_OPER_findByIdAndUpdate,
        self::COUCHDB_CONNECT_OPEN,
        self::COUCHDB_CONNECT_CLOSE,
        self::CASSANDRA_CONNECT_OPEN,
        self::CASSANDRA_CONNECT_CLOSE,
        self::HBASE_CONNECT_OPEN,
        self::HBASE_CONNECT_CLOSE,
        self::HYPERTABLE_CONNECT_OPEN,
        self::HYPERTABLE_CONNECT_CLOSE,
    ];

    /**
     * 数据库操作枚举 对应数据库 类型
     */
    public static $db_query_type = [
        self::MYSQL_QUERY      => self::DB_MYSQL,
        self::MYSQL_OPT_INSERT => self::DB_MYSQL,
        self::MYSQL_OPT_DELETE => self::DB_MYSQL,
        self::MYSQL_OPT_UPDATE => self::DB_MYSQL,
        self::MYSQL_OPT_SELECT => self::DB_MYSQL,

        self::SQLSERVER_QUERY      => self::DB_SQLSERVER,
        self::SQLSERVER_OPT_INSERT => self::DB_SQLSERVER,
        self::SQLSERVER_OPT_DELETE => self::DB_SQLSERVER,
        self::SQLSERVER_OPT_UPDATE => self::DB_SQLSERVER,
        self::SQLSERVER_OPT_SELECT => self::DB_SQLSERVER,

        self::ORACLE_QUERY      => self::DB_ORACLE,
        self::ORACLE_OPT_INSERT => self::DB_ORACLE,
        self::ORACLE_OPT_DELETE => self::DB_ORACLE,
        self::ORACLE_OPT_UPDATE => self::DB_ORACLE,
        self::ORACLE_OPT_SELECT => self::DB_ORACLE,

        self::POSTGRESQL_QUERY      => self::DB_POSTGRESQL,
        self::POSTGRESQL_OPT_INSERT => self::DB_POSTGRESQL,
        self::POSTGRESQL_OPT_DELETE => self::DB_POSTGRESQL,
        self::POSTGRESQL_OPT_UPDATE => self::DB_POSTGRESQL,
        self::POSTGRESQL_OPT_SELECT => self::DB_POSTGRESQL,

        self::SYBASE_QUERY      => self::DB_SYBASE,
        self::SYBASE_OPT_INSERT => self::DB_SYBASE,
        self::SYBASE_OPT_DELETE => self::DB_SYBASE,
        self::SYBASE_OPT_UPDATE => self::DB_SYBASE,
        self::SYBASE_OPT_SELECT => self::DB_SYBASE,

        self::DB2_QUERY      => self::DB_DB2,
        self::DB2_OPT_INSERT => self::DB_DB2,
        self::DB2_OPT_ELETE  => self::DB_DB2,
        self::DB2_OPT_PDATE  => self::DB_DB2,
        self::DB2_OPT_ELECT  => self::DB_DB2,

        self::SQLLITE_QUERY => self::DB_SQLLITE,

        self:: ACCESS_QUERY => self::DB_ACCESS,

        self::MONGODB_OPER_find          => self::DB_MONGODB,
        self::MONGODB_OPER_REMOVE        => self::DB_MONGODB,
        self::MONGODB_OPER_FINDANDMODIFY => self::DB_MONGODB,
        self::MONGODB_OPER_UPDATEMANY    => self::DB_MONGODB,
        self::MONGODB_OPER_UPDATE        => self::DB_MONGODB,
        self::MONGODB_OPER_DROP          => self::DB_MONGODB,
        self::MONGODB_OPER_BULKWRITE     => self::DB_MONGODB,
        self::MONGODB_OPER_INSERT        => self::DB_MONGODB,

        self::MEMCACHE_CONNECT_OPEN => self::DB_MEMCACHE,
        self::MEMCACHE_SET          => self::DB_MEMCACHE,
        self::MEMCACHE_GET          => self::DB_MEMCACHE,
        self::MEMCACHE_DELETE       => self::DB_MEMCACHE,
        self::NOOP_MEMCACHE         => self::DB_MEMCACHE,
        self::STATS_MEMCACHE        => self::DB_MEMCACHE,
        self::FLUSH_ALL_MEMCACHE    => self::DB_MEMCACHE,
        self::GET_ONE_MEMCACHE      => self::DB_MEMCACHE,
        self::GET_MANY_MEMCACHE     => self::DB_MEMCACHE,
        self::SET_MEMCACHE          => self::DB_MEMCACHE,
        self::REPLACE_MEMCACHE      => self::DB_MEMCACHE,
        self::ADD_MEMCACHE          => self::DB_MEMCACHE,
        self::EXCEPTION_MEMCACHE    => self::DB_MEMCACHE,
        self::DELETE_MEMCACHE       => self::DB_MEMCACHE,
        self::VERSION_MEMCACHE      => self::DB_MEMCACHE,
        self::QUIT_MEMCACHE         => self::DB_MEMCACHE,
        self::INCR_MEMCACHE         => self::DB_MEMCACHE,
        self::DECR_MEMCACHE         => self::DB_MEMCACHE,
        self::GETS_ONE_MEMCACHE     => self::DB_MEMCACHE,
        self::GETS_MANY_MEMCACHE    => self::DB_MEMCACHE,
        self::CAS_MEMCACHE          => self::DB_MEMCACHE,
        self::PREPEND_MEMCACHE      => self::DB_MEMCACHE,
        self::GET_HIT_MEMCACHE      => self::DB_MEMCACHE,
        self::GET_MISS_MEMCACHE     => self::DB_MEMCACHE,
        self::VERBOSITY_MEMCACHE    => self::DB_MEMCACHE,
        self::AUTH_LIST_MEMCACHE    => self::DB_MEMCACHE,
        self::AUTH_START_MEMCACHE   => self::DB_MEMCACHE,
        self::AUTH_STEP_MEMCACHE    => self::DB_MEMCACHE,
        self::APPEND_MEMCACHE       => self::DB_MEMCACHE,
        self::TOUCH_MEMCACHE        => self::DB_MEMCACHE,
        self::GAT_MEMCACHE          => self::DB_MEMCACHE,
        self::GATQ_MEMCACHE         => self::DB_MEMCACHE,
        self::SET_MANY_MEMCACHE     => self::DB_MEMCACHE,

        self::PHP_MEMCACHED_DELETE => self::DB_MEMCACHE,
        self::PHP_MEMCACHED_GET    => self::DB_MEMCACHE,
        self::PHP_MEMCACHED_SET    => self::DB_MEMCACHE,
        self::PHP_MEMCACHE_DELETE  => self::DB_MEMCACHE,
        self::PHP_MEMCACHE_GET     => self::DB_MEMCACHE,
        self::PHP_MEMCACHE_SET     => self::DB_MEMCACHE,

        self::DOTNET_MEMCACHE_GET => self::DB_MEMCACHE,

        self:: REDIS_SET    => self::DB_REDIS,
        self:: REDIS_GET    => self::DB_REDIS,
        self:: REDIS_DELETE => self::DB_REDIS,
    ];

    /**
     * 数据库操作枚举 对应数据库 类型
     */
    public static $DB_ACTION_TO_TYPE = [];

    public static $DB_TYPE = [
        self::MYSQL_CONNECT_OPEN,
        self::MYSQL_CONNECT_CLOSE,
        self::MYSQL_QUERY,

        self::SQLSERVER_CONNECT_OPEN,
        self::SQLSERVER_CONNECT_CLOSE,
        self::SQLSERVER_QUERY,

        self:: ORACLE_CONNECT_OPEN,
        self:: ORACLE_CONNECT_CLOSE,
        self:: ORACLE_QUERY,

        self:: POSTGRESQL_CONNECT_OPEN,
        self:: POSTGRESQL_CONNECT_CLOSE,
        self:: POSTGRESQL_QUERY,

        self:: SYBASE_CONNECT_OPEN,
        self:: SYBASE_CONNECT_CLOSE,
        self:: SYBASE_QUERY,

        self:: DB2_CONNECT_OPEN,
        self:: DB2_CONNECT_CLOSE,
        self:: DB2_QUERY,

        self:: ACCESS_CONNECT_OPEN,
        self:: ACCESS_CONNECT_CLOSE,
        self:: ACCESS_QUERY,

        self:: SQLLITE_CONNECT_OPEN,
        self:: SQLLITE_CONNECT_CLOSE,
        self:: SQLLITE_QUERY,

        // Non-relational database
        self:: MEMCACHE_CONNECT_OPEN,
        self:: MEMCACHE_CONNECT_CLOSE,
        self:: MEMCACHE_SET,
        self:: MEMCACHE_GET,
        self::NOOP_MEMCACHE,
        self::STATS_MEMCACHE,
        self::FLUSH_ALL_MEMCACHE,
        self::GET_ONE_MEMCACHE,
        self::GET_MANY_MEMCACHE,
        self::SET_MEMCACHE,
        self::REPLACE_MEMCACHE,
        self::ADD_MEMCACHE,
        self::EXCEPTION_MEMCACHE,
        self::DELETE_MEMCACHE,
        self::VERSION_MEMCACHE,
        self::QUIT_MEMCACHE,
        self::INCR_MEMCACHE,
        self::DECR_MEMCACHE,
        self::GETS_ONE_MEMCACHE,
        self::GETS_MANY_MEMCACHE,
        self::CAS_MEMCACHE,
        self::PREPEND_MEMCACHE,
        self::GET_HIT_MEMCACHE,
        self::GET_MISS_MEMCACHE,
        self::VERBOSITY_MEMCACHE,
        self::AUTH_LIST_MEMCACHE,
        self::AUTH_START_MEMCACHE,
        self::AUTH_STEP_MEMCACHE,
        self::APPEND_MEMCACHE,
        self::TOUCH_MEMCACHE,
        self::GAT_MEMCACHE,
        self::GATQ_MEMCACHE,
        self::SET_MANY_MEMCACHE,

        self:: REDIS_CONNECT_OPEN,
        self:: REDIS_CONNECT_CLOSE,
        self:: REDIS_SET,
        self:: REDIS_GET,

        self:: TOKYO_TYRANT_CONNECT_OPEN,
        self:: TOKYO_TYRANT_CONNECT_CLOSE,

        self:: FLARE_CONNECT_OPEN,
        self:: FLARE_CONNECT_CLOSE,

        self:: ROMA_CONNECT_OPEN,
        self:: ROMA_CONNECT_CLOSE,

        self:: MONGODB_CONNECT_OPEN,
        self:: MONGODB_CONNECT_CLOSE,
        self:: COUCHDB_CONNECT_OPEN,
        self:: COUCHDB_CONNECT_CLOSE,

        self:: CASSANDRA_CONNECT_OPEN,
        self:: CASSANDRA_CONNECT_CLOSE,

        self:: HBASE_CONNECT_OPEN,
        self:: HBASE_CONNECT_CLOSE,

        self:: HYPERTABLE_CONNECT_OPEN,
        self:: HYPERTABLE_CONNECT_CLOSE,
    ];

    /*****************获取数据库操作类型**************************/
    public static $DB_OPT_TYPE = [
        self::MYSQL_OPT_INSERT => 'Insert',
        self::MYSQL_OPT_DELETE => 'Delete',
        self::MYSQL_OPT_UPDATE => 'Update',
        self::MYSQL_OPT_SELECT => 'Select',

        self::SQLSERVER_OPT_INSERT => 'Insert',
        self::SQLSERVER_OPT_DELETE => 'Delete',
        self::SQLSERVER_OPT_UPDATE => 'Update',
        self::SQLSERVER_OPT_SELECT => 'Select',

        self::ORACLE_OPT_INSERT => 'Insert',
        self::ORACLE_OPT_DELETE => 'Delete',
        self::ORACLE_OPT_UPDATE => 'Update',
        self::ORACLE_OPT_SELECT => 'Select',

        self::POSTGRESQL_OPT_INSERT => 'Insert',
        self::POSTGRESQL_OPT_DELETE => 'Delete',
        self::POSTGRESQL_OPT_UPDATE => 'Update',
        self::POSTGRESQL_OPT_SELECT => 'Select',

        self::SYBASE_OPT_INSERT => 'Insert',
        self::SYBASE_OPT_DELETE => 'Delete',
        self::SYBASE_OPT_UPDATE => 'Update',
        self::SYBASE_OPT_SELECT => 'Select',

        self::DB2_OPT_INSERT => 'Insert',
        self::DB2_OPT_ELETE  => 'Delete',
        self::DB2_OPT_PDATE  => 'Update',
        self::DB2_OPT_ELECT  => 'Select',

    ];

    public static $CURD_TYPE = [
        '0' => 'Select',
        '1' => 'Insert',
        '2' => 'Update',
        '3' => 'Delete',
    ];

    public static $API_PST = [
        self::CURL,
        self::RABBIT_PRODUCER,
        self::RABBIT_CONSUMER,
    ];

    public static function getPst($service_type,$app_code_type = NULL, $memcache_flag = false)
    {
        $return = array();
        switch($service_type){
            case ServiceTypeEnum::TYPE_MEMCACHE:
                $return = self::getNosqlMemcachePst($app_code_type, $memcache_flag);
                break;
            case ServiceTypeEnum::TYPE_REDIS:
                $return = self::getNosqlRedisPst($app_code_type);
                break;
            case ServiceTypeEnum::TYPE_MONGODB:
                $return = self::getNosqlMongoPst($app_code_type);
                break;
        }

        return $return;
    }
}
